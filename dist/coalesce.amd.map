{"version":3,"sources":["coalesce/active_model/adapter.js","coalesce/active_model/context.js","coalesce/active_model/serializers/model.js","coalesce/adapter.js","coalesce/collections/has_many_array.js","coalesce/collections/model_array.js","coalesce/collections/model_set.js","coalesce/collections/observable_array.js","coalesce/context/base.js","coalesce/context/config.js","coalesce/context/container.js","coalesce/context/default.js","coalesce/context/inheriting_dict.js","coalesce/error.js","coalesce/id_manager.js","coalesce/index.js","coalesce/merge/base.js","coalesce/merge/per_field.js","coalesce/model/attribute.js","coalesce/model/belongs_to.js","coalesce/model/diff.js","coalesce/model/errors.js","coalesce/model/field.js","coalesce/model/has_many.js","coalesce/model/model.js","coalesce/model/relationship.js","coalesce/namespace.js","coalesce/rest/adapter.js","coalesce/rest/context.js","coalesce/rest/payload.js","coalesce/rest/serializers/errors.js","coalesce/rest/serializers/payload.js","coalesce/serializers/base.js","coalesce/serializers/belongs_to.js","coalesce/serializers/boolean.js","coalesce/serializers/date.js","coalesce/serializers/has_many.js","coalesce/serializers/id.js","coalesce/serializers/model.js","coalesce/serializers/number.js","coalesce/serializers/revision.js","coalesce/serializers/string.js","coalesce/session/collection_manager.js","coalesce/session/flush.js","coalesce/session/inverse_manager.js","coalesce/session/model_cache.js","coalesce/session/operation.js","coalesce/session/query.js","coalesce/session/query_cache.js","coalesce/session/session.js","coalesce/utils/array_from.js","coalesce/utils/base_class.js","coalesce/utils/copy.js","coalesce/utils/evented.js","coalesce/utils/inflector.js","coalesce/utils/is_empty.js","coalesce/utils/is_equal.js","coalesce/utils/is_none.js","coalesce/utils/lazy_copy.js","coalesce/utils/materialize_relationships.js","coalesce/utils/parse_date.js"],"sourcesContent":["import RestAdapter from '../rest/adapter';\n\nimport {decamelize, underscore, pluralize} from '../utils/inflector';\n\n/**\n  The ActiveModelAdapter is a subclass of the RestAdapter designed to integrate\n  with a JSON API that uses an underscored naming convention instead of camelcasing.\n  It has been designed to work out of the box with the\n  [active_model_serializers](http://github.com/rails-api/active_model_serializers)\n  Ruby gem.\n\n  This adapter extends the Coalesce.RestAdapter by making consistent use of the camelization,\n  decamelization and pluralization methods to normalize the serialized JSON into a\n  format that is compatible with a conventional Rails backend.\n\n  ## JSON Structure\n\n  The ActiveModelAdapter expects the JSON returned from your server to follow\n  the REST adapter conventions substituting underscored keys for camelcased ones.\n\n  ### Conventional Names\n\n  Attribute names in your JSON payload should be the underscored versions of\n  the attributes in your Coalesce.js models.\n\n  For example, if you have a `Person` model:\n\n  ```js\n  App.FamousPerson = Coalesce.Model.extend({\n    firstName: Coalesce.attr('string'),\n    lastName: Coalesce.attr('string'),\n    occupation: Coalesce.attr('string')\n  });\n  ```\n\n  The JSON returned should look like this:\n\n  ```js\n  {\n    \"famous_person\": {\n      \"first_name\": \"Barack\",\n      \"last_name\": \"Obama\",\n      \"occupation\": \"President\"\n    }\n  }\n  ```\n\n  @class ActiveModelAdapter\n  @constructor\n  @namespace active_model\n  @extends RestAdapter\n**/\nexport default class ActiveModelAdapter extends RestAdapter {\n\n  pathForType(type) {\n    var decamelized = decamelize(type);\n    var underscored = underscore(decamelized);\n    return pluralize(underscored);\n  }\n\n}\n","import Context  from '../rest/context'\nimport ActiveModelAdapter  from './adapter'\nimport ActiveModelSerializer  from './serializers/model'\n\nexport default class ActiveModelContext extends Context {\n  \n  _setupContainer() {\n    super._setupContainer();\n    var container = this.container;\n    container.register('adapter:default', container.lookupFactory('adapter:application') || ActiveModelAdapter);\n    \n    container.register('serializer:model', ActiveModelSerializer);\n  }\n  \n}\n","import ModelSerializer  from '../../serializers/model'\nimport { singularize } from '../../utils/inflector'\n\n\nexport default class ActiveModelSerializer extends ModelSerializer {\n\n  keyForType(name, type, opts) {\n    var key = super.keyForType(name, type);\n    if(!opts || !opts.embedded) {\n      if(type === 'belongs-to') {\n        return key + '_id';\n      } else if(type === 'has-many') {\n        return singularize(key) + '_ids';\n      }\n    }\n    return key;\n  }\n\n}\n","import Error from './error';\nimport BaseClass from './utils/base_class';\nimport Session from './session/session';\nimport array_from from './utils/array_from';\n\nexport default class Adapter extends BaseClass {\n\n  serialize(model, opts) {\n    return this._serializerFor(model).serialize(model, opts);\n  }\n\n  deserialize(typeKey, data, opts) {\n    if(!opts.typeKey)\n    return this._serializerFor(typeKey).deserialize(data, opts);\n  }\n\n  serializerFor(typeKey) {\n    return this._serializerFor(typeKey);\n  }\n\n  merge(model, session) {\n    if(!session) {\n      session = this.container.lookup('session:main');\n    }\n    return session.merge(model);\n  }\n\n  mergeData(data, typeKey, session) {\n    if(!typeKey) {\n      typeKey = this.defaultSerializer;\n    }\n\n    var serializer = this._serializerFor(typeKey),\n        deserialized = serializer.deserialize(data);\n\n    if(deserialized.isModel) {\n      return this.merge(deserialized, session);\n    } else {\n      return array_from(deserialized).map(function(model) {\n        return this.merge(model, session);\n      }, this);\n    }\n  }\n\n  // This can be overridden in the adapter sub-classes\n  isDirtyFromRelationships(model, cached, relDiff) {\n    return relDiff.length > 0;\n  }\n\n  shouldSave(model) {\n    return true;\n  }\n\n  reifyClientId(model) {\n    this.idManager.reifyClientId(model);\n  }\n  \n  _serializerFor(key) {\n    return this.context.configFor(key).get('serializer');\n  }\n\n}\n","import ModelArray  from '../collections/model_array';\n\nexport default class HasManyArray extends ModelArray {\n  \n  get session() {\n    return this.owner && this.owner.session;\n  }\n  \n  replace(idx, amt, objects) {\n    if(this.session) {\n      objects = objects.map(function(model) {\n        return this.session.add(model);\n      }, this);\n    }\n    super.replace(idx, amt, objects);\n  }\n\n  arrayContentWillChange(index, removed, added) {\n    var model = this.owner,\n        name = this.name,\n        session = this.session;\n\n    if(session) {\n      session.modelWillBecomeDirty(model);\n      if (!model._suspendedRelationships) {\n        for (var i=index; i<index+removed; i++) {\n          var inverseModel = this.objectAt(i);\n          session.inverseManager.unregisterRelationship(model, name, inverseModel);\n        }\n      }\n    }\n\n    return super.arrayContentWillChange(index, removed, added);\n  }\n\n  arrayContentDidChange(index, removed, added) {\n    super.arrayContentDidChange(index, removed, added);\n\n    var model = this.owner,\n        name = this.name,\n        session = this.session;\n        \n    for (var i=index; i<index+added; i++) {\n      var inverseModel = this.objectAt(i);\n      if (session && !model._suspendedRelationships) {\n        session.inverseManager.registerRelationship(model, name, inverseModel);\n      }\n      \n      if(this.embedded) {\n        inverseModel._parent = model;\n      }\n    }\n  }\n  \n  reify() {\n    replace(this, 0, this.length, this.map((model) => {\n      return this.session.add(model);\n    }));\n  }\n\n}\n\nvar splice = Array.prototype.splice;\n\nfunction replace(array, idx, amt, objects) {\n  var args = [].concat(objects), chunk, ret = [],\n      // https://code.google.com/p/chromium/issues/detail?id=56588\n      size = 60000, start = idx, ends = amt, count;\n\n  while (args.length) {\n    count = ends > size ? size : ends;\n    if (count <= 0) { count = 0; }\n\n    chunk = args.splice(0, size);\n    chunk = [start, count].concat(chunk);\n\n    start += size;\n    ends -= count;\n\n    ret = ret.concat(splice.apply(array, chunk));\n  }\n  return ret;\n}\n","import Coalesce  from '../namespace';\nimport isEqual  from '../utils/is_equal';\nimport ModelSet  from './model_set';\nimport ObservableArray  from './observable_array';\n\nexport default class ModelArray extends ObservableArray {\n  \n  arrayContentWillChange(index, removed, added) {\n    for (var i=index; i<index+removed; i++) {\n      var model = this.objectAt(i);\n      var session = this.session;\n\n      if(session) {\n        session.collectionManager.unregister(this, model);\n      }\n    }\n\n    super.arrayContentWillChange(index, removed, added);\n  }\n\n  arrayContentDidChange(index, removed, added) {\n    super.arrayContentDidChange(index, removed, added);\n\n    for (var i=index; i<index+added; i++) {\n      var model = this.objectAt(i);\n      var session = this.session;\n\n      if(session) {\n        session.collectionManager.register(this, model);\n      }\n    }\n  }\n\n  removeObject(obj) {\n    var loc = this.length || 0;\n    while(--loc >= 0) {\n      var curObject = this.objectAt(loc) ;\n      if (isEqual(curObject, obj)) this.removeAt(loc) ;\n    }\n    return this ;\n  }\n\n  contains(obj){\n    for(var i = 0; i < this.length ; i++) {\n      var m = this.objectAt(i);\n      if(isEqual(obj, m)) return true;\n    }\n    return false;\n  }\n\n  /**\n    Ensure that dest has the same content as this array.\n\n    @method copyTo\n    @param dest the other model collection to copy to\n    @return dest\n  */\n  copyTo(dest) {\n    var existing = new ModelSet(dest);\n\n    this.forEach(function(model) {\n      if(existing.has(model)) {\n        existing.delete(model);\n      } else {\n        dest.pushObject(model);\n      }\n    });\n\n    for(var model of existing) {\n      dest.removeObject(model);\n    }\n  }\n  \n  copy() {\n    return super.copy(true);\n  }\n\n  diff(arr) {\n    var diff = new this.constructor();\n\n    this.forEach(function(model) {\n      if(!arr.contains(model)) {\n        diff.push(model);\n      }\n    }, this);\n\n    arr.forEach(function(model) {\n      if(!this.contains(model)) {\n        diff.push(model);\n      }\n    }, this);\n\n    return diff;\n  }\n\n  isEqual(arr) {\n    return this.diff(arr).length === 0;\n  }\n\n  load() {\n    var array = this;\n    return Coalesce.Promise.all(this.map(function(model) {\n      return model.load();\n    })).then(function() {\n      return array;\n    });\n  }\n\n}\n","function guidFor(model) {\n  return model.clientId;\n}\n\nimport array_from  from '../utils/array_from'\nimport BaseClass  from '../utils/base_class'\n\n/**\n  An unordered collection of unique models.\n  \n  Uniqueness is determined by the `clientId`. If a model is added and an\n  equivalent model already exists in the ModelSet, the existing model will be\n  overwritten.\n\n  @class ModelSet\n*/\nexport default class ModelSet extends BaseClass {\n\n  constructor(iterable) {\n    super();\n    this._size = 0;\n    if(iterable) {\n      this.addObjects(iterable);\n    }\n  }\n  \n  get size() {\n    return this._size;\n  }\n\n  /**\n    Clears the set. This is useful if you want to reuse an existing set\n    without having to recreate it.\n\n    ```javascript\n    var models = new ModelSet([post1, post2, post3]);\n    models.size;  // 3\n    models.clear();\n    models.size;  // 0\n    ```\n\n    @method clear\n    @return {ModelSet} An empty Set\n  */\n  clear() {\n    var len = this._size;\n    if (len === 0) { return this; }\n\n    var guid;\n\n    for (var i=0; i < len; i++){\n      guid = guidFor(this[i]);\n      delete this[guid];\n      delete this[i];\n    }\n\n    this._size = 0;\n\n    return this;\n  }\n\n  add(obj) {\n\n    var guid = guidFor(obj),\n        idx  = this[guid],\n        len  = this._size;\n\n    if (idx>=0 && idx<len && (this[idx] && this[idx].isEqual(obj))) {\n      // overwrite the existing version\n      if(this[idx] !== obj) {\n        this[idx] = obj;\n      }\n      return this; // added\n    }\n\n    len = this._size;\n    this[guid] = len;\n    this[len] = obj;\n    this._size = len+1;\n\n    return this;\n  }\n\n  delete(obj) {\n\n    var guid = guidFor(obj),\n        idx  = this[guid],\n        len = this._size,\n        isFirst = idx === 0,\n        isLast = idx === len-1,\n        last;\n\n\n    if (idx>=0 && idx<len && (this[idx] && this[idx].isEqual(obj))) {\n      // swap items - basically move the item to the end so it can be removed\n      if (idx < len-1) {\n        last = this[len-1];\n        this[idx] = last;\n        this[guidFor(last)] = idx;\n      }\n\n      delete this[guid];\n      delete this[len-1];\n      this._size = len-1;\n      return true;\n    }\n\n    return false;\n  }\n\n  has(obj) {\n    return this[guidFor(obj)]>=0;\n  }\n\n  copy(deep=false) {\n    var C = this.constructor, ret = new C(), loc = this._size;\n    ret._size = loc;\n    while(--loc>=0) {\n      ret[loc] = deep ? this[loc].copy() : this[loc];\n      ret[guidFor(this[loc])] = loc;\n    }\n    return ret;\n  }\n  \n  \n  forEach(callbackFn, thisArg = undefined) {\n    for (var i=0; i < this._size; i++) {\n      callbackFn.call(thisArg, this[i], this[i], this);\n    }\n  }\n\n  toString() {\n    var len = this.size, idx, array = [];\n    for(idx = 0; idx < len; idx++) {\n      array[idx] = this[idx];\n    }\n    return `ModelSet<${array.join(',')}>`;\n  }\n  \n  get(model) {\n    var idx = this[guidFor(model)];\n    if(idx === undefined) return;\n    return this[idx];\n  }\n\n  getForClientId(clientId) {\n    var idx = this[clientId];\n    if(idx === undefined) return;\n    return this[idx];\n  }\n  \n  *values() {\n    for (var i=0; i < this._size; i++) {\n      yield this[i];\n    }\n  }\n\n  /**\n    Adds the model to the set or overwrites the existing\n    model.\n  */\n  addData(model) {\n    var existing = this.getModel(model);\n    var dest;\n    if(existing) {\n      dest = existing.copy();\n      model.copyTo(dest);\n    } else {\n      // copy since the dest could be the model in the session\n      dest = model.copy();\n    }\n    this.add(dest);\n    return dest;\n  }\n  \n\n  //\n  // Backwards compat. methods\n  //\n  addObjects(iterable) {\n    if(typeof iterable.forEach === 'function') {\n      iterable.forEach(function(item) {\n        this.add(item);\n      }, this);\n    } else {\n      for (var item of iterable) {\n        this.add(item);\n      }\n    }\n    return this;\n  }\n  \n  removeObjects(iterable) {\n    if(typeof iterable.forEach === 'function') {\n      iterable.forEach(function(item) {\n        this.delete(item);\n      }, this);\n    } else {\n      for (var item of iterable) {\n        this.delete(item);\n      }\n    }\n    return this;\n  }\n  \n  toArray() {\n    return array_from(this);\n  }\n\n}\n\nvar aliases = {\n  'remove': 'delete',\n  'contains': 'has',\n  'addObject': 'add',\n  'removeObject': 'delete',\n  'getModel': 'get'\n}\n\nfor(var alias in aliases) {\n  if(!aliases.hasOwnProperty(alias)) continue;\n  var target = aliases[alias];\n  ModelSet.prototype[alias] = ModelSet.prototype[target];\n}\n\n\n// Make iterable\nObject.defineProperty(ModelSet.prototype, Symbol.iterator, {\n  value: ModelSet.prototype.values,\n  configurable: true,\n  writable: true\n});\n","import Error from '../error';\nimport copy from '../utils/copy';\nimport array_from from '../utils/array_from';\n\nvar EMPTY = [],\n    splice = Array.prototype.splice;\n    \n/**\n  Array subclass which implements a variety of mutation methods that\n  support `arrayContentDidChange` and `arrayContentWillChange` hooks.\n  \n  @class ObservableArray\n*/\nexport default class ObservableArray extends Array {\n\n  /**\n    Remove all elements from the array. This is useful if you\n    want to reuse an existing array without having to recreate it.\n\n    ```javascript\n    var colors = [\"red\", \"green\", \"blue\"];\n    color.length();   //  3\n    colors.clear();   //  []\n    colors.length();  //  0\n    ```\n\n    @method clear\n    @return {ObservableArray} An empty Array.\n  */\n  clear () {\n    var len = this.length;\n    if (len === 0) return this;\n    this.replace(0, len, EMPTY);\n    return this;\n  }\n\n  /**\n    This will use the primitive `replace()` method to insert an object at the\n    specified index.\n\n    ```javascript\n    var colors = [\"red\", \"green\", \"blue\"];\n    colors.insertAt(2, \"yellow\");  // [\"red\", \"green\", \"yellow\", \"blue\"]\n    colors.insertAt(5, \"orange\");  // Error: Index out of range\n    ```\n\n    @method insertAt\n    @param {Number} idx index of insert the object at.\n    @param {Object} object object to insert\n    @return {ObservableArray} receiver\n  */\n  insertAt(idx, object) {\n    if (idx > this.length) throw new Error(\"Index out of range\");\n    this.replace(idx, 0, [object]);\n    return this;\n  }\n\n  /**\n    Remove an object at the specified index using the `replace()` primitive\n    method. You can pass either a single index, or a start and a length.\n\n    If you pass a start and length that is beyond the\n    length this method will throw an `OUT_OF_RANGE_EXCEPTION`.\n\n    ```javascript\n    var colors = [\"red\", \"green\", \"blue\", \"yellow\", \"orange\"];\n    colors.removeAt(0);     // [\"green\", \"blue\", \"yellow\", \"orange\"]\n    colors.removeAt(2, 2);  // [\"green\", \"blue\"]\n    colors.removeAt(4, 2);  // Error: Index out of range\n    ```\n\n    @method removeAt\n    @param {Number} start index, start of range\n    @param {Number} len length of passing range\n    @return {ObservableArray} receiver\n  */\n  removeAt(start, len) {\n    if ('number' === typeof start) {\n\n      if ((start < 0) || (start >= this.length)) {\n        throw new Error(\"Index out of range\");\n      }\n\n      // fast case\n      if (len === undefined) len = 1;\n      this.replace(start, len, EMPTY);\n    }\n\n    return this;\n  }\n\n  /**\n    Push the object onto the end of the array. Works just like `push()` but it\n    is KVO-compliant.\n\n    ```javascript\n    var colors = [\"red\", \"green\"];\n    colors.pushObject(\"black\");     // [\"red\", \"green\", \"black\"]\n    colors.pushObject([\"yellow\"]);  // [\"red\", \"green\", [\"yellow\"]]\n    ```\n\n    @method pushObject\n    @param {*} obj object to push\n    @return object same object passed as a param\n  */\n  pushObject(obj) {\n    this.insertAt(this.length, obj);\n    return obj;\n  }\n\n  /**\n    Add the objects in the passed numerable to the end of the array. Defers\n    notifying observers of the change until all objects are added.\n\n    ```javascript\n    var colors = [\"red\"];\n    colors.pushObjects([\"yellow\", \"orange\"]);  // [\"red\", \"yellow\", \"orange\"]\n    ```\n\n    @method pushObjects\n    @param {Array} objects the objects to add\n    @return {ObservableArray} receiver\n  */\n  pushObjects(objects) {\n    this.replace(this.length, 0, objects);\n    return this;\n  }\n\n  /**\n    Pop object from array or nil if none are left. Works just like `pop()` but\n    it is KVO-compliant.\n\n    ```javascript\n    var colors = [\"red\", \"green\", \"blue\"];\n    colors.popObject();   // \"blue\"\n    console.log(colors);  // [\"red\", \"green\"]\n    ```\n\n    @method popObject\n    @return object\n  */\n  popObject() {\n    var len = this.length;\n    if (len === 0) return null;\n\n    var ret = this.objectAt(len-1);\n    this.removeAt(len-1, 1);\n    return ret;\n  }\n\n  /**\n    Shift an object from start of array or nil if none are left. Works just\n    like `shift()` but it is KVO-compliant.\n\n    ```javascript\n    var colors = [\"red\", \"green\", \"blue\"];\n    colors.shiftObject();  // \"red\"\n    console.log(colors);   // [\"green\", \"blue\"]\n    ```\n\n    @method shiftObject\n    @return object\n  */\n  shiftObject() {\n    if (this.length === 0) return null;\n    var ret = this.objectAt(0);\n    this.removeAt(0);\n    return ret;\n  }\n\n  /**\n    Unshift an object to start of array. Works just like `unshift()` but it is\n    KVO-compliant.\n\n    ```javascript\n    var colors = [\"red\"];\n    colors.unshiftObject(\"yellow\");    // [\"yellow\", \"red\"]\n    colors.unshiftObject([\"black\"]);   // [[\"black\"], \"yellow\", \"red\"]\n    ```\n\n    @method unshiftObject\n    @param {*} obj object to unshift\n    @return object same object passed as a param\n  */\n  unshiftObject(obj) {\n    this.insertAt(0, obj);\n    return obj;\n  }\n\n  /**\n    Adds the named objects to the beginning of the array. Defers notifying\n    observers until all objects have been added.\n\n    ```javascript\n    var colors = [\"red\"];\n    colors.unshiftObjects([\"black\", \"white\"]);   // [\"black\", \"white\", \"red\"]\n    colors.unshiftObjects(\"yellow\"); // Type Error: 'undefined' is not a function\n    ```\n\n    @method unshiftObjects\n    @param {Array} objects the objects to add\n    @return {ObservableArray} receiver\n  */\n  unshiftObjects(objects) {\n    this.replace(0, 0, objects);\n    return this;\n  }\n\n  /**\n    Reverse objects in the array. Works just like `reverse()` but it is\n    KVO-compliant.\n\n    @method reverseObjects\n    @return {ObservableArray} receiver\n   */\n  reverseObjects() {\n    var len = this.length;\n    if (len === 0) return this;\n    var objects = this.toArray().reverse();\n    this.replace(0, len, objects);\n    return this;\n  }\n  \n  toArray() {\n    return array_from(this);\n  }\n\n  /**\n    Replace all the the receiver's content with content of the argument.\n    If argument is an empty array receiver will be cleared.\n\n    ```javascript\n    var colors = [\"red\", \"green\", \"blue\"];\n    colors.setObjects([\"black\", \"white\"]);  // [\"black\", \"white\"]\n    colors.setObjects([]);                  // []\n    ```\n\n    @method setObjects\n    @param {ObservableArray} objects array whose content will be used for replacing\n        the content of the receiver\n    @return {ObservableArray} receiver with the new content\n   */\n  setObjects(objects) {\n    if (objects.length === 0) return this.clear();\n\n    var len = this.length;\n    this.replace(0, len, objects);\n    return this;\n  }\n\n  /**\n    Remove all occurances of an object in the array.\n\n    ```javascript\n    var cities = [\"Chicago\", \"Berlin\", \"Lima\", \"Chicago\"];\n    cities.removeObject(\"Chicago\");  // [\"Berlin\", \"Lima\"]\n    cities.removeObject(\"Lima\");     // [\"Berlin\"]\n    cities.removeObject(\"Tokyo\")     // [\"Berlin\"]\n    ```\n\n    @method removeObject\n    @param {*} obj object to remove\n    @return {ObservableArray} receiver\n  */\n  removeObject(obj) {\n    var loc = this.length || 0;\n    while(--loc >= 0) {\n      var curObject = this.objectAt(loc);\n      if (curObject === obj) this.removeAt(loc);\n    }\n    return this;\n  }\n\n  /**\n    Push the object onto the end of the array if it is not already\n    present in the array.\n\n    ```javascript\n    var cities = [\"Chicago\", \"Berlin\"];\n    cities.addObject(\"Lima\");    // [\"Chicago\", \"Berlin\", \"Lima\"]\n    cities.addObject(\"Berlin\");  // [\"Chicago\", \"Berlin\", \"Lima\"]\n    ```\n\n    @method addObject\n    @param {*} obj object to add, if not already present\n    @return {ObservableArray} receiver\n  */\n  addObject(obj) {\n    if (!this.contains(obj)) this.pushObject(obj);\n    return this;\n  }\n  \n  objectAt(idx) {\n    return this[idx];\n  }\n  \n  /**\n    Adds each object in the passed enumerable to the receiver.\n\n    @method addObjects\n    @param {Array} objects the objects to add.\n    @return {Object} receiver\n  */\n  addObjects(objects) {\n    for (var i = objects.length - 1; i >= 0; i--) {\n      this.addObject(objects[i]);\n    }\n    return this;\n  }\n\n  /**\n    Removes each object in the passed enumerable from the receiver.\n\n    @method removeObjects\n    @param {Array} objects the objects to remove\n    @return {Object} receiver\n  */\n  removeObjects(objects) {\n    for (var i = objects.length - 1; i >= 0; i--) {\n      this.removeObject(objects[i]);\n    }\n    return this;\n  }\n\n  // primitive for array support.\n  replace(idx, amt, objects) {\n    // if we replaced exactly the same number of items, then pass only the\n    // replaced range. Otherwise, pass the full remaining array length\n    // since everything has shifted\n    var len = objects ? objects.length : 0;\n    this.arrayContentWillChange(idx, amt, len);\n\n    if (len === 0) {\n      this.splice(idx, amt);\n    } else {\n      replace(this, idx, amt, objects);\n    }\n\n    this.arrayContentDidChange(idx, amt, len);\n    return this;\n  }\n\n\n  // If browser did not implement indexOf natively, then override with\n  // specialized version\n  indexOf(object, startAt) {\n    var idx, len = this.length;\n\n    if (startAt === undefined) startAt = 0;\n    else startAt = (startAt < 0) ? Math.ceil(startAt) : Math.floor(startAt);\n    if (startAt < 0) startAt += len;\n\n    for(idx=startAt;idx<len;idx++) {\n      if (this[idx] === object) return idx ;\n    }\n    return -1;\n  }\n\n  lastIndexOf(object, startAt) {\n    var idx, len = this.length;\n\n    if (startAt === undefined) startAt = len-1;\n    else startAt = (startAt < 0) ? Math.ceil(startAt) : Math.floor(startAt);\n    if (startAt < 0) startAt += len;\n\n    for(idx=startAt;idx>=0;idx--) {\n      if (this[idx] === object) return idx ;\n    }\n    return -1;\n  }\n\n  copy(deep) {\n    var arr;\n    if (deep) {\n      arr = this.map(function(item) { return copy(item, true); });\n    } else {\n      arr = this.slice();\n    }\n    var res = new this.constructor();\n    res.addObjects(arr);\n    return res;\n  }\n  \n  get firstObject() {\n    return this.objectAt(0);\n  }\n  \n  get lastObject() {\n    return this.objectAt(this.length - 1);\n  }\n  \n  contains(obj) {\n    return this.indexOf(obj) >= 0;\n  }\n  \n  arrayContentWillChange(index, removed, added) {\n  }\n\n  arrayContentDidChange(index, removed, added) {\n  }\n  \n}\n\nfunction replace(array, idx, amt, objects) {\n  var args = [].concat(objects), chunk, ret = [],\n      // https://code.google.com/p/chromium/issues/detail?id=56588\n      size = 60000, start = idx, ends = amt, count;\n\n  while (args.length) {\n    count = ends > size ? size : ends;\n    if (count <= 0) { count = 0; }\n\n    chunk = args.splice(0, size);\n    chunk = [start, count].concat(chunk);\n\n    start += size;\n    ends -= count;\n\n    ret = ret.concat(splice.apply(array, chunk));\n  }\n  return ret;\n}\n","import Error  from '../error';\nimport Config  from './config';\nimport Container  from './container';\n\nexport default class Base {\n  \n  constructor(config=null, container=new Container()) {\n    container.register('context:main', this, {instantiate: false});\n    this.container = container;\n    this._configs = {};\n    this._setupContainer();\n    if(config) {\n      this.configure(config);\n    }\n  }\n  \n  typeFor(typeKey) {\n    return this.configFor(typeKey).type;\n  }\n  \n  configFor(typeKey) {\n    typeKey = this._normalizeKey(typeKey);\n    var config = this._configs[typeKey];\n    if(!config) {\n      config = this._configs[typeKey] = new Config(typeKey, this);\n      if(config.type) {\n        config.type.reify(this, typeKey);\n      }\n    }\n    return config;\n  }\n  \n  configure(config, typeKey='default') {\n    for(var key in config) {\n      if(!config.hasOwnProperty(key)) continue;\n      var value = config[key];\n      \n      // the `types` config property is special and configures subtypes\n      if(key === 'types') {\n        this._configureTypes(config.types);\n        continue;\n      }\n      \n      // types are currently registered on the container under the `model`\n      // namespace (e.g. model:post)\n      if(key === 'class') {\n        key = 'model';\n      }\n      \n      this._register(typeKey, key, value);\n    }\n  }\n  \n  _normalizeKey(key) {\n    if(typeof key !== 'string') {\n      key = key.typeKey;\n    }\n    console.assert(key, `Unknown type '${key}'`);\n    return key;\n  }\n  \n  _configureTypes(typesConfig) {\n    for(var key in typesConfig) {\n      if(!typesConfig.hasOwnProperty(key)) continue;\n      var config = typesConfig[key];\n      // support shorthand notation of just a class\n      if(typeof config === 'function') {\n        config = {\n          class: config\n        };\n      }\n      var klass = config.class;\n      if(klass && !klass.typeKey) {\n        klass.typeKey = key;\n      }\n      this.configure(config, key);\n    }\n  }\n  \n  _register(typeKey, type, value, opts) {\n    var key = `${type}:${typeKey}`\n    return this.container.register(key, value);\n  }\n  \n  _setupContainer() {\n    // subclasses override\n  }\n  \n}\n","/**\n  Per-type configuration object. Used to access the per-type adapter/serializer/etc.\n*/\nexport default class Config {\n  \n  constructor(typeKey, context) {\n    this._typeKey = typeKey;\n    this._context = context;\n    this._container = context.container;\n  }\n  \n  get type() {\n    if(this._type !== undefined) {\n      return this._type;\n    }\n    var Type = this._container.lookupFactory(`model:${this._typeKey}`);\n    if(Type) {\n      // Ember's container extends by default\n      Type = Type.parentType;\n    }\n    return this._type = Type;\n  }\n  \n  get(key) {\n    var containerKey = `${key}:${this._typeKey}`,\n        container = this._container;\n    \n    if(!container.has(containerKey)) {\n      var defaultKey = `${key}:default`,\n          Default = container.lookupFactory(defaultKey);\n          \n      console.assert(Default, `No default '${key}' found`);\n          \n      class Factory extends Default {};\n      \n      container.register(containerKey, Factory);\n    }\n    \n    var value = this._container.lookup(containerKey);\n    \n    if(!value.typeKey) {\n      value.typeKey = this._typeKey;\n    }\n    \n    return value;\n  }\n  \n}\n","import InheritingDict from './inheriting_dict';\n\n// A lightweight container that helps to assemble and decouple components.\n// Public api for the container is still in flux.\n// The public api, specified on the application namespace should be considered the stable api.\nfunction Container(parent) {\n  this.parent = parent;\n  this.children = [];\n\n  this.resolver = parent && parent.resolver || function() {};\n\n  this.registry = new InheritingDict(parent && parent.registry);\n  this.cache = new InheritingDict(parent && parent.cache);\n  this.factoryCache = new InheritingDict(parent && parent.factoryCache);\n  this.resolveCache = new InheritingDict(parent && parent.resolveCache);\n  this.typeInjections = new InheritingDict(parent && parent.typeInjections);\n  this.injections = {};\n\n  this.factoryTypeInjections = new InheritingDict(parent && parent.factoryTypeInjections);\n  this.factoryInjections = {};\n\n  this._options = new InheritingDict(parent && parent._options);\n  this._typeOptions = new InheritingDict(parent && parent._typeOptions);\n}\n\nContainer.prototype = {\n\n  /**\n    @property parent\n    @type Container\n    @default null\n  */\n  parent: null,\n\n  /**\n    @property children\n    @type Array\n    @default []\n  */\n  children: null,\n\n  /**\n    @property resolver\n    @type function\n  */\n  resolver: null,\n\n  /**\n    @property registry\n    @type InheritingDict\n  */\n  registry: null,\n\n  /**\n    @property cache\n    @type InheritingDict\n  */\n  cache: null,\n\n  /**\n    @property typeInjections\n    @type InheritingDict\n  */\n  typeInjections: null,\n\n  /**\n    @property injections\n    @type Object\n    @default {}\n  */\n  injections: null,\n\n  /**\n    @private\n\n    @property _options\n    @type InheritingDict\n    @default null\n  */\n  _options: null,\n\n  /**\n    @private\n\n    @property _typeOptions\n    @type InheritingDict\n  */\n  _typeOptions: null,\n\n  /**\n    Returns a new child of the current container. These children are configured\n    to correctly inherit from the current container.\n\n    @method child\n    @return {Container}\n  */\n  child: function() {\n    var container = new Container(this);\n    this.children.push(container);\n    return container;\n  },\n\n  /**\n    Sets a key-value pair on the current container. If a parent container,\n    has the same key, once set on a child, the parent and child will diverge\n    as expected.\n\n    @method set\n    @param {Object} object\n    @param {String} key\n    @param {any} value\n  */\n  set: function(object, key, value) {\n    object[key] = value;\n  },\n\n  /**\n    Registers a factory for later injection.\n\n    Example:\n\n    ```javascript\n    var container = new Container();\n\n    container.register('model:user', Person, {singleton: false });\n    container.register('fruit:favorite', Orange);\n    container.register('communication:main', Email, {singleton: false});\n    ```\n\n    @method register\n    @param {String} fullName\n    @param {Function} factory\n    @param {Object} options\n  */\n  register: function(fullName, factory, options) {\n    console.assert(validateFullName(fullName), 'fullName must be a proper full name');\n\n    if (factory === undefined) {\n      throw new TypeError('Attempting to register an unknown factory: `' + fullName + '`');\n    }\n\n    var normalizedName = this.normalize(fullName);\n\n    if (this.cache.has(normalizedName)) {\n      throw new Error('Cannot re-register: `' + fullName +'`, as it has already been looked up.');\n    }\n\n    this.registry.set(normalizedName, factory);\n    this._options.set(normalizedName, options || {});\n  },\n\n  /**\n    Unregister a fullName\n\n    ```javascript\n    var container = new Container();\n    container.register('model:user', User);\n\n    container.lookup('model:user') instanceof User //=> true\n\n    container.unregister('model:user')\n    container.lookup('model:user') === undefined //=> true\n    ```\n\n    @method unregister\n    @param {String} fullName\n   */\n  unregister: function(fullName) {\n    console.assert(validateFullName(fullName), 'fullName must be a proper full name');\n\n    var normalizedName = this.normalize(fullName);\n\n    this.registry.remove(normalizedName);\n    this.cache.remove(normalizedName);\n    this.factoryCache.remove(normalizedName);\n    this.resolveCache.remove(normalizedName);\n    this._options.remove(normalizedName);\n  },\n\n  /**\n    Given a fullName return the corresponding factory.\n\n    By default `resolve` will retrieve the factory from\n    its container's registry.\n\n    ```javascript\n    var container = new Container();\n    container.register('api:twitter', Twitter);\n\n    container.resolve('api:twitter') // => Twitter\n    ```\n\n    Optionally the container can be provided with a custom resolver.\n    If provided, `resolve` will first provide the custom resolver\n    the opportunity to resolve the fullName, otherwise it will fallback\n    to the registry.\n\n    ```javascript\n    var container = new Container();\n    container.resolver = function(fullName) {\n      // lookup via the module system of choice\n    };\n\n    // the twitter factory is added to the module system\n    container.resolve('api:twitter') // => Twitter\n    ```\n\n    @method resolve\n    @param {String} fullName\n    @return {Function} fullName's factory\n  */\n  resolve: function(fullName) {\n    console.assert(validateFullName(fullName), 'fullName must be a proper full name');\n    return resolve(this, this.normalize(fullName));\n  },\n\n  /**\n    A hook that can be used to describe how the resolver will\n    attempt to find the factory.\n\n    @method describe\n    @param {String} fullName\n    @return {string} described fullName\n  */\n  describe: function(fullName) {\n    return fullName;\n  },\n\n  /**\n    A hook to enable custom fullName normalization behaviour\n\n    @method normalize\n    @param {String} fullName\n    @return {string} normalized fullName\n  */\n  normalize: function(fullName) {\n    return fullName;\n  },\n\n  /**\n    @method makeToString\n\n    @param {any} factory\n    @param {string} fullName\n    @return {function} toString function\n  */\n  makeToString: function(factory, fullName) {\n    return factory.toString();\n  },\n\n  /**\n    Given a fullName return a corresponding instance.\n\n    The default behaviour is for lookup to return a singleton instance.\n    The singleton is scoped to the container, allowing multiple containers\n    to all have their own locally scoped singletons.\n\n    ```javascript\n    var container = new Container();\n    container.register('api:twitter', Twitter);\n\n    var twitter = container.lookup('api:twitter');\n\n    twitter instanceof Twitter; // => true\n\n    // by default the container will return singletons\n    var twitter2 = container.lookup('api:twitter');\n    twitter2 instanceof Twitter; // => true\n\n    twitter === twitter2; //=> true\n    ```\n\n    If singletons are not wanted an optional flag can be provided at lookup.\n\n    ```javascript\n    var container = new Container();\n    container.register('api:twitter', Twitter);\n\n    var twitter = container.lookup('api:twitter', { singleton: false });\n    var twitter2 = container.lookup('api:twitter', { singleton: false });\n\n    twitter === twitter2; //=> false\n    ```\n\n    @method lookup\n    @param {String} fullName\n    @param {Object} options\n    @return {any}\n  */\n  lookup: function(fullName, options) {\n    console.assert(validateFullName(fullName), 'fullName must be a proper full name');\n    return lookup(this, this.normalize(fullName), options);\n  },\n\n  /**\n    Given a fullName return the corresponding factory.\n\n    @method lookupFactory\n    @param {String} fullName\n    @return {any}\n  */\n  lookupFactory: function(fullName) {\n    console.assert(validateFullName(fullName), 'fullName must be a proper full name');\n    return factoryFor(this, this.normalize(fullName));\n  },\n\n  /**\n    Given a fullName check if the container is aware of its factory\n    or singleton instance.\n\n    @method has\n    @param {String} fullName\n    @return {Boolean}\n  */\n  has: function(fullName) {\n    console.assert(validateFullName(fullName), 'fullName must be a proper full name');\n    return has(this, this.normalize(fullName));\n  },\n\n  /**\n    Allow registering options for all factories of a type.\n\n    ```javascript\n    var container = new Container();\n\n    // if all of type `connection` must not be singletons\n    container.optionsForType('connection', { singleton: false });\n\n    container.register('connection:twitter', TwitterConnection);\n    container.register('connection:facebook', FacebookConnection);\n\n    var twitter = container.lookup('connection:twitter');\n    var twitter2 = container.lookup('connection:twitter');\n\n    twitter === twitter2; // => false\n\n    var facebook = container.lookup('connection:facebook');\n    var facebook2 = container.lookup('connection:facebook');\n\n    facebook === facebook2; // => false\n    ```\n\n    @method optionsForType\n    @param {String} type\n    @param {Object} options\n  */\n  optionsForType: function(type, options) {\n    if (this.parent) { illegalChildOperation('optionsForType'); }\n\n    this._typeOptions.set(type, options);\n  },\n\n  /**\n    @method options\n    @param {String} type\n    @param {Object} options\n  */\n  options: function(type, options) {\n    this.optionsForType(type, options);\n  },\n\n  /**\n    Used only via `injection`.\n\n    Provides a specialized form of injection, specifically enabling\n    all objects of one type to be injected with a reference to another\n    object.\n\n    For example, provided each object of type `controller` needed a `router`.\n    one would do the following:\n\n    ```javascript\n    var container = new Container();\n\n    container.register('router:main', Router);\n    container.register('controller:user', UserController);\n    container.register('controller:post', PostController);\n\n    container.typeInjection('controller', 'router', 'router:main');\n\n    var user = container.lookup('controller:user');\n    var post = container.lookup('controller:post');\n\n    user.router instanceof Router; //=> true\n    post.router instanceof Router; //=> true\n\n    // both controllers share the same router\n    user.router === post.router; //=> true\n    ```\n\n    @private\n    @method typeInjection\n    @param {String} type\n    @param {String} property\n    @param {String} fullName\n  */\n  typeInjection: function(type, property, fullName) {\n    console.assert(validateFullName(fullName), 'fullName must be a proper full name');\n    if (this.parent) { illegalChildOperation('typeInjection'); }\n\n    var fullNameType = fullName.split(':')[0];\n    if(fullNameType === type) {\n      throw new Error('Cannot inject a `' + fullName + '` on other ' + type + '(s). Register the `' + fullName + '` as a different type and perform the typeInjection.');\n    }\n    addTypeInjection(this.typeInjections, type, property, fullName);\n  },\n\n  /**\n    Defines injection rules.\n\n    These rules are used to inject dependencies onto objects when they\n    are instantiated.\n\n    Two forms of injections are possible:\n\n    * Injecting one fullName on another fullName\n    * Injecting one fullName on a type\n\n    Example:\n\n    ```javascript\n    var container = new Container();\n\n    container.register('source:main', Source);\n    container.register('model:user', User);\n    container.register('model:post', Post);\n\n    // injecting one fullName on another fullName\n    // eg. each user model gets a post model\n    container.injection('model:user', 'post', 'model:post');\n\n    // injecting one fullName on another type\n    container.injection('model', 'source', 'source:main');\n\n    var user = container.lookup('model:user');\n    var post = container.lookup('model:post');\n\n    user.source instanceof Source; //=> true\n    post.source instanceof Source; //=> true\n\n    user.post instanceof Post; //=> true\n\n    // and both models share the same source\n    user.source === post.source; //=> true\n    ```\n\n    @method injection\n    @param {String} factoryName\n    @param {String} property\n    @param {String} injectionName\n  */\n  injection: function(fullName, property, injectionName) {\n    if (this.parent) { illegalChildOperation('injection'); }\n\n    validateFullName(injectionName);\n    var normalizedInjectionName = this.normalize(injectionName);\n\n    if (fullName.indexOf(':') === -1) {\n      return this.typeInjection(fullName, property, normalizedInjectionName);\n    }\n\n    console.assert(validateFullName(fullName), 'fullName must be a proper full name');\n    var normalizedName = this.normalize(fullName);\n\n    if (this.cache.has(normalizedName)) {\n      throw new Error(\"Attempted to register an injection for a type that has already been looked up. ('\" + normalizedName + \"', '\" + property + \"', '\" + injectionName + \"')\");\n    }\n    addInjection(this.injections, normalizedName, property, normalizedInjectionName);\n  },\n\n\n  /**\n    Used only via `factoryInjection`.\n\n    Provides a specialized form of injection, specifically enabling\n    all factory of one type to be injected with a reference to another\n    object.\n\n    For example, provided each factory of type `model` needed a `store`.\n    one would do the following:\n\n    ```javascript\n    var container = new Container();\n\n    container.register('store:main', SomeStore);\n\n    container.factoryTypeInjection('model', 'store', 'store:main');\n\n    var store = container.lookup('store:main');\n    var UserFactory = container.lookupFactory('model:user');\n\n    UserFactory.store instanceof SomeStore; //=> true\n    ```\n\n    @private\n    @method factoryTypeInjection\n    @param {String} type\n    @param {String} property\n    @param {String} fullName\n  */\n  factoryTypeInjection: function(type, property, fullName) {\n    if (this.parent) { illegalChildOperation('factoryTypeInjection'); }\n\n    addTypeInjection(this.factoryTypeInjections, type, property, this.normalize(fullName));\n  },\n\n  /**\n    Defines factory injection rules.\n\n    Similar to regular injection rules, but are run against factories, via\n    `Container#lookupFactory`.\n\n    These rules are used to inject objects onto factories when they\n    are looked up.\n\n    Two forms of injections are possible:\n\n  * Injecting one fullName on another fullName\n  * Injecting one fullName on a type\n\n    Example:\n\n    ```javascript\n    var container = new Container();\n\n    container.register('store:main', Store);\n    container.register('store:secondary', OtherStore);\n    container.register('model:user', User);\n    container.register('model:post', Post);\n\n    // injecting one fullName on another type\n    container.factoryInjection('model', 'store', 'store:main');\n\n    // injecting one fullName on another fullName\n    container.factoryInjection('model:post', 'secondaryStore', 'store:secondary');\n\n    var UserFactory = container.lookupFactory('model:user');\n    var PostFactory = container.lookupFactory('model:post');\n    var store = container.lookup('store:main');\n\n    UserFactory.store instanceof Store; //=> true\n    UserFactory.secondaryStore instanceof OtherStore; //=> false\n\n    PostFactory.store instanceof Store; //=> true\n    PostFactory.secondaryStore instanceof OtherStore; //=> true\n\n    // and both models share the same source instance\n    UserFactory.store === PostFactory.store; //=> true\n    ```\n\n    @method factoryInjection\n    @param {String} factoryName\n    @param {String} property\n    @param {String} injectionName\n  */\n  factoryInjection: function(fullName, property, injectionName) {\n    if (this.parent) { illegalChildOperation('injection'); }\n\n    var normalizedName = this.normalize(fullName);\n    var normalizedInjectionName = this.normalize(injectionName);\n\n    validateFullName(injectionName);\n\n    if (fullName.indexOf(':') === -1) {\n      return this.factoryTypeInjection(normalizedName, property, normalizedInjectionName);\n    }\n\n    console.assert(validateFullName(fullName), 'fullName must be a proper full name');\n\n    if (this.factoryCache.has(normalizedName)) {\n      throw new Error('Attempted to register a factoryInjection for a type that has already ' +\n        'been looked up. (\\'' + normalizedName + '\\', \\'' + property + '\\', \\'' + injectionName + '\\')');\n    }\n\n    addInjection(this.factoryInjections, normalizedName, property, normalizedInjectionName);\n  },\n\n  /**\n    A depth first traversal, destroying the container, its descendant containers and all\n    their managed objects.\n\n    @method destroy\n  */\n  destroy: function() {\n    for (var i = 0, length = this.children.length; i < length; i++) {\n      this.children[i].destroy();\n    }\n\n    this.children = [];\n\n    eachDestroyable(this, function(item) {\n      item.destroy();\n    });\n\n    this.parent = undefined;\n    this.isDestroyed = true;\n  },\n\n  /**\n    @method reset\n  */\n  reset: function() {\n    for (var i = 0, length = this.children.length; i < length; i++) {\n      resetCache(this.children[i]);\n    }\n\n    resetCache(this);\n  }\n};\n\nfunction resolve(container, normalizedName) {\n  var cached = container.resolveCache.get(normalizedName);\n  if (cached) { return cached; }\n\n  var resolved = container.resolver(normalizedName) || container.registry.get(normalizedName);\n  container.resolveCache.set(normalizedName, resolved);\n\n  return resolved;\n}\n\nfunction has(container, fullName){\n  if (container.cache.has(fullName)) {\n    return true;\n  }\n\n  return !!container.resolve(fullName);\n}\n\nfunction lookup(container, fullName, options) {\n  options = options || {};\n\n  if (container.cache.has(fullName) && options.singleton !== false) {\n    return container.cache.get(fullName);\n  }\n\n  var value = instantiate(container, fullName);\n\n  if (value === undefined) { return; }\n\n  if (isSingleton(container, fullName) && options.singleton !== false) {\n    container.cache.set(fullName, value);\n  }\n\n  return value;\n}\n\nfunction illegalChildOperation(operation) {\n  throw new Error(operation + ' is not currently supported on child containers');\n}\n\nfunction isSingleton(container, fullName) {\n  var singleton = option(container, fullName, 'singleton');\n\n  return singleton !== false;\n}\n\nfunction buildInjections(container, injections) {\n  var hash = {};\n\n  if (!injections) { return hash; }\n\n  var injection, injectable;\n\n  for (var i = 0, length = injections.length; i < length; i++) {\n    injection = injections[i];\n    injectable = lookup(container, injection.fullName);\n\n    if (injectable !== undefined) {\n      hash[injection.property] = injectable;\n    } else {\n      throw new Error('Attempting to inject an unknown injection: `' + injection.fullName + '`');\n    }\n  }\n\n  return hash;\n}\n\nfunction option(container, fullName, optionName) {\n  var options = container._options.get(fullName);\n\n  if (options && options[optionName] !== undefined) {\n    return options[optionName];\n  }\n\n  var type = fullName.split(':')[0];\n  options = container._typeOptions.get(type);\n\n  if (options) {\n    return options[optionName];\n  }\n}\n\nfunction factoryFor(container, fullName) {\n  var cache = container.factoryCache;\n  if (cache.has(fullName)) {\n    return cache.get(fullName);\n  }\n  var factory = container.resolve(fullName);\n  if (factory === undefined) { return; }\n\n  var type = fullName.split(':')[0];\n  if (!factory || typeof factory.extend !== 'function') {\n    // TODO: think about a 'safe' merge style extension\n    // for now just fallback to create time injection\n    return factory;\n  } else {\n    var injections = injectionsFor(container, fullName);\n    var factoryInjections = factoryInjectionsFor(container, fullName);\n\n    factoryInjections._toString = container.makeToString(factory, fullName);\n\n    var injectedFactory = factory.extend(injections);\n    injectedFactory.reopenClass(factoryInjections);\n\n    cache.set(fullName, injectedFactory);\n\n    return injectedFactory;\n  }\n}\n\nfunction injectionsFor(container, fullName) {\n  var splitName = fullName.split(':'),\n    type = splitName[0],\n    injections = [];\n\n  injections = injections.concat(container.typeInjections.get(type) || []);\n  injections = injections.concat(container.injections[fullName] || []);\n\n  injections = buildInjections(container, injections);\n  injections._debugContainerKey = fullName;\n  injections.container = container;\n\n  return injections;\n}\n\nfunction factoryInjectionsFor(container, fullName) {\n  var splitName = fullName.split(':'),\n    type = splitName[0],\n    factoryInjections = [];\n\n  factoryInjections = factoryInjections.concat(container.factoryTypeInjections.get(type) || []);\n  factoryInjections = factoryInjections.concat(container.factoryInjections[fullName] || []);\n\n  factoryInjections = buildInjections(container, factoryInjections);\n  factoryInjections._debugContainerKey = fullName;\n\n  return factoryInjections;\n}\n\nfunction instantiate(container, fullName) {\n  var factory = factoryFor(container, fullName);\n\n  if (option(container, fullName, 'instantiate') === false) {\n    return factory;\n  }\n\n  if (factory) {\n    if (typeof factory.create !== 'function') {\n      throw new Error('Failed to create an instance of \\'' + fullName + '\\'. ' +\n        'Most likely an improperly defined class or an invalid module export.');\n    }\n\n    if (typeof factory.extend === 'function') {\n      // assume the factory was extendable and is already injected\n      return factory.create();\n    } else {\n      // assume the factory was extendable\n      // to create time injections\n      // TODO: support new'ing for instantiation and merge injections for pure JS Functions\n      return factory.create(injectionsFor(container, fullName));\n    }\n  }\n}\n\nfunction eachDestroyable(container, callback) {\n  container.cache.eachLocal(function(key, value) {\n    if (option(container, key, 'instantiate') === false) { return; }\n    callback(value);\n  });\n}\n\nfunction resetCache(container) {\n  container.cache.eachLocal(function(key, value) {\n    if (option(container, key, 'instantiate') === false) { return; }\n    value.destroy();\n  });\n  container.cache.dict = {};\n}\n\nfunction addTypeInjection(rules, type, property, fullName) {\n  var injections = rules.get(type);\n\n  if (!injections) {\n    injections = [];\n    rules.set(type, injections);\n  }\n\n  injections.push({\n    property: property,\n    fullName: fullName\n  });\n}\n\nvar VALID_FULL_NAME_REGEXP = /^[^:]+.+:[^:]+$/;\nfunction validateFullName(fullName) {\n  if (!VALID_FULL_NAME_REGEXP.test(fullName)) {\n    throw new TypeError('Invalid Fullname, expected: `type:name` got: ' + fullName);\n  }\n  return true;\n}\n\nfunction addInjection(rules, factoryName, property, injectionName) {\n  var injections = rules[factoryName] = rules[factoryName] || [];\n  injections.push({ property: property, fullName: injectionName });\n}\n\nexport default Container;\n","import IdManager  from '../id_manager'\nimport PerField  from '../merge/per_field'\nimport Errors  from '../model/errors'\nimport BelongsToSerializer  from '../serializers/belongs_to'\nimport BooleanSerializer  from '../serializers/boolean'\nimport DateSerializer  from '../serializers/date'\nimport HasManySerializer  from '../serializers/has_many'\nimport IdSerializer  from '../serializers/id'\nimport ModelSerializer  from '../serializers/model'\nimport NumberSerializer  from '../serializers/number'\nimport RevisionSerializer  from '../serializers/revision'\nimport StringSerializer  from '../serializers/string'\nimport ModelCache  from '../session/model_cache'\nimport QueryCache  from '../session/query_cache'\nimport Session  from '../session/session'\nimport Base  from './base'\n\n/**\n  Default context with sensible default configuration\n*/\nexport default class Context extends Base {\n  \n  newSession() {\n    return this.container.lookup('session:default');\n  }\n  \n  get session() {\n    return this.container.lookup('session:main');\n  }\n  \n  _setupContainer() {\n    super._setupContainer();\n    var container = this.container;\n    container.register('model:errors', Errors);\n    this._setupSession(container);\n    this._setupInjections(container);\n    this._setupSerializers(container);\n    this._setupMergeStrategies(container);\n    this._setupCaches(container);\n  }\n  \n  _setupSession(container) {\n    container.register('session:default',  container.lookupFactory('session:application') || Session, {singleton: false});\n    container.register('session:main', container.lookupFactory('session:application') || Session);\n    container.register('idManager:default', IdManager);\n  }\n  \n  _setupInjections(container) {\n    container.typeInjection('session', 'context', 'context:main');\n    container.typeInjection('serializer', 'context', 'context:main');\n    container.typeInjection('adapter', 'context', 'context:main');\n    \n    container.typeInjection('serializer', 'idManager', 'idManager:default');\n    container.typeInjection('session', 'idManager', 'idManager:default');\n    container.typeInjection('adapter', 'idManager', 'idManager:default');\n  }\n  \n  _setupSerializers(container) {\n    container.register('serializer:default', ModelSerializer);\n    \n    container.register('serializer:belongs-to', BelongsToSerializer);\n    container.register('serializer:boolean', BooleanSerializer);\n    container.register('serializer:date', DateSerializer);\n    container.register('serializer:has-many', HasManySerializer);\n    container.register('serializer:id', IdSerializer);\n    container.register('serializer:number', NumberSerializer);\n    container.register('serializer:revision', RevisionSerializer);\n    container.register('serializer:string', StringSerializer);\n  }\n  \n  _setupMergeStrategies(container) {\n    container.register('mergeStrategy:default', PerField);\n  }\n  \n  _setupCaches(container) {\n    container.register('queryCache:default', QueryCache);\n    container.register('modelCache:default', ModelCache);\n  }\n  \n}\n","// A safe and simple inheriting object.\nfunction InheritingDict(parent) {\n  this.parent = parent;\n  this.dict = {};\n}\n\nInheritingDict.prototype = {\n\n  /**\n    @property parent\n    @type InheritingDict\n    @default null\n  */\n\n  parent: null,\n\n  /**\n    Object used to store the current nodes data.\n\n    @property dict\n    @type Object\n    @default Object\n  */\n  dict: null,\n\n  /**\n    Retrieve the value given a key, if the value is present at the current\n    level use it, otherwise walk up the parent hierarchy and try again. If\n    no matching key is found, return undefined.\n\n    @method get\n    @param {String} key\n    @return {any}\n  */\n  get: function(key) {\n    var dict = this.dict;\n\n    if (dict.hasOwnProperty(key)) {\n      return dict[key];\n    }\n\n    if (this.parent) {\n      return this.parent.get(key);\n    }\n  },\n\n  /**\n    Set the given value for the given key, at the current level.\n\n    @method set\n    @param {String} key\n    @param {Any} value\n  */\n  set: function(key, value) {\n    this.dict[key] = value;\n  },\n\n  /**\n    Delete the given key\n\n    @method remove\n    @param {String} key\n  */\n  remove: function(key) {\n    delete this.dict[key];\n  },\n\n  /**\n    Check for the existence of given a key, if the key is present at the current\n    level return true, otherwise walk up the parent hierarchy and try again. If\n    no matching key is found, return false.\n\n    @method has\n    @param {String} key\n    @return {Boolean}\n  */\n  has: function(key) {\n    var dict = this.dict;\n\n    if (dict.hasOwnProperty(key)) {\n      return true;\n    }\n\n    if (this.parent) {\n      return this.parent.has(key);\n    }\n\n    return false;\n  },\n\n  /**\n    Iterate and invoke a callback for each local key-value pair.\n\n    @method eachLocal\n    @param {Function} callback\n    @param {Object} binding\n  */\n  eachLocal: function(callback, binding) {\n    var dict = this.dict;\n\n    for (var prop in dict) {\n      if (dict.hasOwnProperty(prop)) {\n        callback.call(binding, prop, dict[prop]);\n      }\n    }\n  }\n};\n\nexport default InheritingDict;\n","var errorProps = [\n  'description',\n  'fileName',\n  'lineNumber',\n  'message',\n  'name',\n  'number',\n  'stack'\n];\n\n/**\n  A subclass of the JavaScript Error object for use in Coalesce.\n\n  @class Error\n  @extends Error\n  @constructor\n*/\nfunction CsError() {\n  var tmp = Error.apply(this, arguments);\n\n  // Adds a `stack` property to the given error object that will yield the\n  // stack trace at the time captureStackTrace was called.\n  // When collecting the stack trace all frames above the topmost call\n  // to this function, including that call, will be left out of the\n  // stack trace.\n  // This is useful because we can hide Coalesce implementation details\n  // that are not very helpful for the user.\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, CsError);\n  }\n  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n  for (var idx = 0; idx < errorProps.length; idx++) {\n    this[errorProps[idx]] = tmp[errorProps[idx]];\n  }\n}\n\nCsError.prototype = Object.create(Error.prototype);\n\nexport default CsError;\n","import BaseClass  from './utils/base_class'\n\nvar uuid = 1;\n\n/**\n  This class is responsible for maintaining a centralized mapping\n  between client-side identifiers (`clientId`) and server-side\n  identifiers (`id`).\n\n  @class IdManager\n*/\nexport default class IdManager extends BaseClass {\n  constructor() {\n    super();\n    this.idMaps = {};\n  }\n\n  /**\n    Three possible cases:\n\n    1. The model already has a clientId and an id.\n       Make sure the clientId maps to the id.\n\n    2. The model has no id or clientId. The model must be a new\n       record. Generate a clientId and set on the model.\n\n    3. The model has and id but no clientId. Generate a new clientId,\n       update the mapping, and assign it to the model.\n  */\n  reifyClientId(model) {\n    var id = model.id,\n        clientId = model.clientId,\n        typeKey = model.typeKey,\n        idMap = this.idMaps[typeKey];\n\n    if(!idMap) {\n      idMap = this.idMaps[typeKey] = {};\n    }\n\n    if(id) {\n      id = id + '';\n    }\n\n    if(id && clientId) {\n      var existingClientId = idMap[id];\n      console.assert(!existingClientId || existingClientId === clientId, \"clientId has changed for \" + model.toString());\n      if(!existingClientId) {\n        idMap[id] = clientId;\n      }\n    } else if(!clientId) {\n      if(id) {\n        clientId = idMap[id];\n      }\n      if(!clientId) {\n        clientId = this._generateClientId(typeKey);\n      }\n      model.clientId = clientId;\n      idMap[id] = clientId;\n    } // else NO-OP, nothing to do if they already have a clientId and no id\n    return clientId;\n  }\n\n  getClientId(typeKey, id) {\n    var idMap = this.idMaps[typeKey];\n    return idMap && idMap[id + ''];\n  }\n\n  _generateClientId(typeKey) {\n    return typeKey + (uuid++);\n  }\n\n}\n","\nimport ActiveModelAdapter  from './active_model/adapter'\nimport ActiveModelContext  from './active_model/context'\nimport ActiveModelSerializer  from './active_model/serializers/model'\nimport Adapter  from './adapter'\nimport HasManyArray  from './collections/has_many_array'\nimport ModelArray  from './collections/model_array'\nimport ModelSet  from './collections/model_set'\nimport Context  from './context/default'\nimport IdManager  from './id_manager'\nimport MergeStrategy  from './merge/base'\nimport PerField  from './merge/per_field'\nimport './model/diff'\nimport Errors  from './model/errors'\nimport Model  from './model/model'\nimport Coalesce  from './namespace'\nimport RestAdapter  from './rest/adapter'\nimport RestContext  from './rest/context'\nimport Payload  from './rest/payload'\nimport RestErrorsSerializer  from './rest/serializers/errors'\nimport PayloadSerializer  from './rest/serializers/payload'\nimport Serializer  from './serializers/base'\nimport BelongsToSerializer  from './serializers/belongs_to'\nimport BooleanSerializer  from './serializers/boolean'\nimport DateSerializer  from './serializers/date'\nimport HasManySerializer  from './serializers/has_many'\nimport IdSerializer  from './serializers/id'\nimport ModelSerializer  from './serializers/model'\nimport NumberSerializer  from './serializers/number'\nimport RevisionSerializer  from './serializers/revision'\nimport StringSerializer  from './serializers/string'\nimport CollectionManager  from './session/collection_manager'\nimport InverseManager  from './session/inverse_manager'\nimport ModelCache  from './session/model_cache'\nimport QueryCache  from './session/query_cache'\nimport Session  from './session/session'\nimport { pluralize, singularize } from './utils/inflector'\nimport isEqual  from './utils/is_equal'\n\nCoalesce.Context = Context;\n\nCoalesce.Adapter = Adapter;\nCoalesce.IdManager = IdManager;\n\nCoalesce.ModelArray = ModelArray;\nCoalesce.ModelSet = ModelSet;\nCoalesce.HasManyArray = HasManyArray;\n\nCoalesce.MergeStrategy = MergeStrategy;\nCoalesce.PerField = PerField;\n\nCoalesce.Model = Model;\nCoalesce.Errors = Errors;\n\nCoalesce.RestContext = RestContext;\nCoalesce.RestErrorsSerializer = RestErrorsSerializer;\nCoalesce.PayloadSerializer = PayloadSerializer;\nCoalesce.Payload = Payload;\nCoalesce.RestAdapter = RestAdapter;\n\nCoalesce.ActiveModelContext = ActiveModelContext;\nCoalesce.ActiveModelAdapter = ActiveModelAdapter;\nCoalesce.ActiveModelSerializer = ActiveModelSerializer;\n\nCoalesce.Serializer = Serializer;\nCoalesce.BelongsToSerializer = BelongsToSerializer;\nCoalesce.BooleanSerializer = BooleanSerializer;\nCoalesce.DateSerializer = DateSerializer;\nCoalesce.HasManySerializer = HasManySerializer;\nCoalesce.IdSerializer = IdSerializer;\nCoalesce.NumberSerializer = NumberSerializer;\nCoalesce.ModelSerializer = ModelSerializer;\nCoalesce.RevisionSerializer = RevisionSerializer;\nCoalesce.StringSerializer = StringSerializer;\n\nCoalesce.CollectionManager = CollectionManager;\nCoalesce.InverseManager = InverseManager;\nCoalesce.Session = Session;\nCoalesce.QueryCache = QueryCache;\nCoalesce.ModelCache = ModelCache;\n\nCoalesce.pluralize = pluralize;\nCoalesce.singularize = singularize;\n\nCoalesce.isEqual = isEqual;\n\nexport default Coalesce;\n","import BaseClass from '../utils/base_class';\n\n/**\n  Abstract base class for a three-way `Model` merge implementation.\n\n  @namespace merge\n  @class Base\n*/\nexport default class Base extends BaseClass {\n\n  merge(ours, ancestor, theirs) {\n    // Not Implemented\n  }\n\n}\n","import Base from './base';\nimport ModelSet from '../collections/model_set';\nimport isEqual from '../utils/is_equal';\nimport copy from '../utils/copy';\n\n/**\n  Merge strategy that merges on a per-field basis.\n\n  Fields which have been editted by both will\n  default to \"ours\".\n\n  Fields which do not have an ancestor will default to\n  \"theirs\".\n\n  @namespace merge\n  @class PerField\n*/\nexport default class PerField extends Base {\n\n  merge(ours, ancestor, theirs) {\n    this.mergeAttributes(ours, ancestor, theirs);\n    this.mergeRelationships(ours, ancestor, theirs);\n    return ours;\n  }\n\n  mergeAttributes(ours, ancestor, theirs) {\n    ours.eachAttribute(function(name, meta) {\n      this.mergeProperty(ours, ancestor, theirs, name);\n    }, this);\n  }\n\n  mergeRelationships(ours, ancestor, theirs) {\n    var session = this.session;\n    ours.eachRelationship(function(name, relationship) {\n      if(relationship.kind === 'belongsTo') {\n        this.mergeBelongsTo(ours, ancestor, theirs, name);\n      } else if(relationship.kind === 'hasMany') {\n        this.mergeHasMany(ours, ancestor, theirs, name);\n      }\n    }, this);\n  }\n\n  mergeBelongsTo(ours, ancestor, theirs, name) {\n    this.mergeProperty(ours, ancestor, theirs, name);\n  }\n\n  mergeHasMany(ours, ancestor, theirs, name) {\n    this.mergeProperty(ours, ancestor, theirs, name);\n  }\n\n  mergeProperty(ours, ancestor, theirs, name) {\n    var oursValue = ours[name],\n        ancestorValue = ancestor[name],\n        theirsValue = theirs[name];\n\n    if(!ours.isFieldLoaded(name)) {\n      if(theirs.isFieldLoaded(name)) {\n        ours[name] = copy(theirsValue);\n      }\n      return;\n    }\n    if(!theirs.isFieldLoaded(name) || isEqual(oursValue, theirsValue)) {\n      return;\n    }\n    // if the ancestor does not have the property loaded we are\n    // performing a two-way merge and we just pick theirs\n    if(!ancestor.isFieldLoaded(name) || isEqual(oursValue, ancestorValue)) {\n      ours[name] = copy(theirsValue);\n    } else {\n      // NO-OP\n    }\n  }\n\n}\n","import Field from './field';\nimport isEqual from '../utils/is_equal';\n\nexport default class Attribute extends Field {\n  \n  get kind() {\n    return 'attribute';\n  }\n  \n  defineProperty(prototype) {\n    var name = this.name;\n    Object.defineProperty(prototype, name, {\n      enumerable: true,\n      configurable: true,\n      get: function() {\n        return this._attributes[name];\n      },\n      set: function(value) {\n        var oldValue = this._attributes[name];\n        if(isEqual(oldValue, value)) return;\n        this.attributeWillChange(name);\n        this._attributes[name] = value;\n        this.attributeDidChange(name);\n        return value;\n      }\n    });\n  }\n  \n}\n","import Relationship from './relationship';\nimport isEqual from '../utils/is_equal';\n\nexport default class BelongsTo extends Relationship {\n  \n  defineProperty(prototype) {\n    var name = this.name,\n        embedded = this.embedded;\n    Object.defineProperty(prototype, name, {\n      enumerable: true,\n      configurable: true,\n      get: function() {\n        var value = this._relationships[name],\n            session = this.session;\n        if(session && value && value.session !== session) {\n          value = this._relationships[name] = this.session.add(value);\n        }\n        return value;\n      },\n      set: function(value) {\n        var oldValue = this._relationships[name];\n        if(oldValue === value) return;\n        this.belongsToWillChange(name);\n        var session = this.session;\n        if(session) {\n          session.modelWillBecomeDirty(this);\n          if(value) {\n            value = session.add(value);\n          }\n        }\n        if(value && embedded) {\n          value._parent = this;\n        }\n        this._relationships[name] = value;\n        this.belongsToDidChange(name);\n        return value;\n      }\n    });\n  }\n  \n}\n","import Model from './model';\nimport ModelSet from '../collections/model_set';\n\nModel.reopen({\n\n  diff: function(model) {\n    var diffs = [];\n\n    this.eachLoadedAttribute(function(name, meta) {\n      var left = this[name];\n      var right = model[name];\n\n      if(left && typeof left.diff === 'function' && right && typeof right.diff === 'function') {\n        if(left.diff(right).length > 0) {\n          diffs.push({type: 'attr', name: name});\n        }\n        return;\n      }\n\n      if(left && right\n        && typeof left === 'object'\n        && typeof right === 'object') {\n        if(JSON.stringify(left) !== JSON.stringify(right)) {\n          diffs.push({type: 'attr', name: name});\n        }\n        return;\n      }\n\n      if(left instanceof Date && right instanceof Date) {\n        left = left.getTime();\n        right = right.getTime();\n      }\n      if(left !== right) {\n        diffs.push({type: 'attr', name: name});\n      }\n    }, this);\n\n    this.eachLoadedRelationship(function(name, relationship) {\n      var left = this[name];\n      var right = model[name];\n      if(relationship.kind === 'belongsTo') {\n        if(left && right) {\n          if(!left.isEqual(right)) {\n            diffs.push({type: 'belongsTo', name: name, relationship: relationship, oldValue: right});\n          }\n        } else if(left || right) {\n          diffs.push({type: 'belongsTo', name: name, relationship: relationship, oldValue: right});\n        }\n      } else if(relationship.kind === 'hasMany') {\n        var dirty = false;\n        var cache = new ModelSet();\n        left.forEach(function(model) {\n          cache.add(model);\n        });\n        right.forEach(function(model) {\n          if(dirty) return;\n          if(!cache.contains(model)) {\n            dirty = true;\n          } else {\n            cache.remove(model);\n          }\n        });\n        if(dirty || cache.length > 0) {\n          diffs.push({type: 'hasMany', name: name, relationship: relationship});\n        }\n      }\n    }, this);\n\n    return diffs;\n  }\n\n});\n","import BaseClass  from '../utils/base_class'\n\nclass Errors extends BaseClass {\n\n  set(name, value) {\n    this[name] = value;\n  }\n\n  constructor(obj={}) {\n    super();\n    for(var key in obj) {\n      if(!obj.hasOwnProperty(key)) continue;\n      this[key] = obj[key];\n    }\n  }\n  \n  forEach(callback, binding) {\n    for(var key in this) {\n      if(!this.hasOwnProperty(key)) continue;\n      callback.call(binding, this[key], key);\n    }\n  }\n  \n  copy() {\n    return new this.constructor(this);\n  }\n\n}\n\nexport default Errors;\n","/**\n  Abstract base class for attributes and relationships\n  @class Field\n*/\nexport default class Field {\n  \n  constructor(name, options) {\n    this.name = name;\n    for(var key in options) {\n      if(!options.hasOwnProperty(key)) continue;\n      this[key] = options[key];\n    }\n  }\n  \n}\n","import HasManyArray  from '../collections/has_many_array';\nimport Coalesce  from '../namespace';\nimport copy  from '../utils/copy';\nimport isEqual  from '../utils/is_equal';\nimport Relationship  from './relationship';\n\nvar defaults = _.defaults;\n\nexport default class HasMany extends Relationship {\n  \n  constructor(name, options) {\n    defaults(options, {collectionType: HasManyArray});\n    super(name, options);\n  }\n  \n  defineProperty(prototype) {\n    var name = this.name,\n        CollectionType = this.collectionType,\n        embedded = this.embedded;\n    Object.defineProperty(prototype, name, {\n      enumerable: true,\n      configurable: true,\n      get: function() {\n        var value = this._relationships[name];\n        if(this.isNew && !value) {\n          var content = value;\n          value = this._relationships[name] = new CollectionType();\n          value.owner = this;\n          value.name = name;\n          value.embedded = embedded;\n          if(content) {\n            value.addObjects(content);\n          }\n        }\n        if(value && value.needsReification && value.reify && this.session) {\n          value.reify();\n          value.needsReification = false;\n        }\n        return value;\n      },\n      set: function(value) {\n        var oldValue = this._relationships[name];\n        if(oldValue === value) return;\n        if(value && value instanceof CollectionType) {\n          // XXX: this logic might not be necessary without Ember\n          // need to copy since this content is being listened to\n          value = copy(value);\n        }\n        if(oldValue && oldValue instanceof CollectionType) {\n          oldValue.clear();\n          if(value) {\n            oldValue.addObjects(value);\n          }\n        } else {\n          this.hasManyWillChange(name);\n          \n          var content = value;\n          value = this._relationships[name] = new CollectionType();\n          value.owner = this;\n          value.name = name;\n          value.embedded = embedded;\n          if(content) {\n            value.addObjects(content);\n          }\n          this.hasManyDidChange(name);\n        }\n        return value;\n      }\n    });\n  }\n  \n}\n","import ModelSet  from '../collections/model_set';\nimport Error  from '../error';\nimport Coalesce  from '../namespace';\nimport BaseClass  from '../utils/base_class';\nimport copy  from '../utils/copy';\nimport { camelize, pluralize, underscore, classify } from '../utils/inflector';\nimport isEqual  from '../utils/is_equal';\nimport lazyCopy  from '../utils/lazy_copy';\nimport Attribute  from './attribute';\nimport BelongsTo  from './belongs_to';\nimport Field  from './field';\nimport HasMany  from './has_many';\n\nexport default class Model extends BaseClass {\n\n  get id() {\n    return getMeta.call(this, 'id');\n  }\n  set id(value) {\n    return setMeta.call(this, 'id', value);\n  }\n\n  get clientId() {\n    return getMeta.call(this, 'clientId');\n  }\n  set clientId(value) {\n    return setMeta.call(this, 'clientId', value);\n  }\n\n  get rev() {\n    return getMeta.call(this, 'rev');\n  }\n  set rev(value) {\n    return setMeta.call(this, 'rev', value);\n  }\n\n  get clientRev() {\n    return getMeta.call(this, 'clientRev');\n  }\n  set clientRev(value) {\n    return setMeta.call(this, 'clientRev', value);\n  }\n\n  get isDeleted() {\n    return getMeta.call(this, 'isDeleted');\n  }\n  set isDeleted(value) {\n    return setMeta.call(this, 'isDeleted', value);\n  }\n\n  get errors() {\n    return getMeta.call(this, 'errors');\n  }\n  set errors(value) {\n    return setMeta.call(this, 'errors', value);\n  }\n\n  get isModel() {\n    return true;\n  }\n  \n  get session() {\n    return this._session;\n  }\n  \n  set session(value) {\n    console.assert(!this._session || this._session === value, \"Cannot re-assign a model's session\");\n    this._session = value;\n  }\n  \n  constructor(fields) {\n    super();\n    this._meta = {\n      id: null,\n      clientId: null,\n      rev: null,\n      clientRev: 0,\n      isDeleted: false,\n      errors: null\n    }\n    this._attributes = {};\n    this._relationships = {};\n    this._suspendedRelationships = false;\n    this._session = null;\n\n    for(var name in fields) {\n      if(!fields.hasOwnProperty(name)) continue;\n      this[name] = fields[name];\n    }\n  }\n  \n  /**\n    Increase the client rev number\n  */\n  bump() {\n    return ++this.clientRev;\n  }\n  \n  /**\n    Two models are \"equal\" when they correspond to the same\n    key. This does not mean they necessarily have the same data.\n  */\n  isEqual(model) {\n    if(!model) return false;\n    var clientId = this.clientId;\n    var otherClientId = model.clientId;\n    if(clientId && otherClientId) {\n      return clientId === otherClientId;\n    }\n    // in most cases clientIds will always be set, however\n    // during serialization this might not be the case\n    var id = this.id;\n    var otherId = model.id;\n    return this instanceof model.constructor && id === otherId\n  }\n  \n  get typeKey() {\n    return this.constructor.typeKey;\n  }\n\n  toString() {\n    var sessionString = this.session ? this.session.toString() : \"(detached)\";\n    return this.constructor.toString() + \"<\" + (this.id || '(no id)') + \", \" + this.clientId + \", \" + sessionString + \">\";\n  }\n  \n  static toString() {\n    if(this.__toString = this.__toString || this.name || (this.typeKey && classify(this.typeKey))) {\n      return this.__toString;\n    }\n    return \"[No Type Key]\";\n  }\n\n  toJSON() {\n    var res = {};\n    _.merge(res, this._meta);\n    _.merge(res, this._attributes);\n    return res;\n  }\n\n  get hasErrors() {\n    return !!this.errors;\n  }\n\n  get isDetached() {\n    return !this.session;\n  }\n\n  get isManaged() {\n    return !!this.session;\n  }\n\n  get isNew() {\n    return !this.id;\n  }\n  \n  get isEmbedded() {\n    return !!this._parent;\n  }\n\n  get isDirty() {\n    if(this.session) {\n      return this.session.dirtyModels.contains(this);\n    } else {\n      return false;\n    }\n  }\n\n  /**\n    Returns a copy with all properties unloaded except identifiers.\n\n    @method lazyCopy\n    @returns {Model}\n  */\n  lazyCopy() {\n    var copy = new this.constructor({\n      id: this.id,\n      clientId: this.clientId\n    });\n    return copy;\n  }\n\n  // creates a shallow copy with lazy children\n  // TODO: we should not lazily copy detached children\n  copy() {\n    var dest = new this.constructor();\n    this.copyTo(dest);\n    return dest;\n  }\n\n  copyTo(dest) {\n    this.copyMeta(dest);\n    this.copyAttributes(dest);\n    this.copyRelationships(dest);\n  }\n  \n  copyMeta(dest) {\n    // TODO _parent should just use clientId\n    dest._parent = this._parent;\n    dest._meta = copy(this._meta);\n  }\n  \n  copyAttributes(dest) {\n    this.loadedAttributes.forEach(function(options, name) {\n      dest._attributes[name] = copy(this._attributes[name], true);\n    }, this);\n  }\n  \n  copyRelationships(dest) {\n    this.eachLoadedRelationship(function(name, relationship) {\n      dest[name] = this[name];\n    }, this);\n  }\n  \n  /**\n    Copy the model to the target session.\n  */\n  fork(session) {\n    var dest = new this.constructor();\n    this.copyTo(dest);\n    session.adopt(dest);\n    // XXX: this is a hack to lazily add the children when the array is accessed\n    dest.eachLoadedRelationship(function(name, relationship) {\n      dest[name].needsReification = true;\n    });\n    return dest;\n  }\n\n  // XXX: move to ember\n  willWatchProperty(key) {\n    // EmberTODO\n    if(this.isManaged && this.shouldTriggerLoad(key)) {\n      Coalesce.backburner.run.scheduleOnce('actions', this, this.load);\n    }\n  }\n\n  shouldTriggerLoad(key) {\n    return this.isField(key) && !this.isFieldLoaded(key);\n  }\n\n  isField(key) {\n    return !!this.fields.get(key)\n  }\n\n  isFieldLoaded(key) {\n    return this.isNew || typeof this[key] !== 'undefined'\n  }\n\n  /**\n    Returns true if *any* fields are loaded on the model\n  */\n  get isPartiallyLoaded() {\n    var res = false;\n    this.fields.forEach(function(options, name) {\n      res = res || this.isFieldLoaded(name);\n    }, this);\n    return res;\n  }\n  \n  /**\n    Returns true if *all* fields (including relationships) are loaded on the model.\n  */\n  get isLoaded() {\n    var res = true;\n    this.fields.forEach(function(options, name) {\n      res = res && this.isFieldLoaded(name);\n    }, this);\n    return res;\n  }\n\n  /**\n    Defines the attributes and relationships on the model.\n    \n    For example:\n    \n    ```\n    class Post extends Model {}\n    Post.defineSchema({\n      typeKey: 'post',\n      attributes: {\n        title: {\n          type: 'string'\n        },\n        body: {\n          type: 'string'\n        }\n      },\n      relationships: {\n        user: {\n          type: 'user',\n          kind: 'belongsTo'\n        },\n        comments: {\n          type: 'comment',\n          kind: 'hasMany'\n        }\n      }\n    });\n    ```\n    \n    @method defineSchema\n    @param {Object} schema\n  */\n  static defineSchema(schema) {\n    if(typeof schema.typeKey !== 'undefined') {\n      this.typeKey = schema.typeKey;\n    }\n    var attributes = schema.attributes || {};\n    for(var name in attributes) {\n      if(!attributes.hasOwnProperty(name)) continue;\n      var field = new Attribute(name, attributes[name]);\n      this.defineField(field);\n    }\n    var relationships = schema.relationships || {};\n    for(var name in relationships) {\n      if(!relationships.hasOwnProperty(name)) continue;\n      var options = relationships[name];\n      console.assert(options.kind, \"Relationships must have a 'kind' property specified\");\n      var field;\n      if(options.kind === 'belongsTo') {\n        field = new BelongsTo(name, options);\n      } else if(options.kind === 'hasMany') {\n        field = new HasMany(name, options);\n      } else {\n        console.assert(false, \"Unkown relationship kind '\" + options.kind + \"'. Supported kinds are 'belongsTo' and 'hasMany'\");\n      }\n      this.defineField(field);\n    }\n  }\n  \n  static defineField(field) {\n    field.defineProperty(this.prototype);\n    field.parentType = this;\n    this.ownFields.set(field.name, field);\n    return field;\n  }\n  \n  static get ownFields() {\n    if(!this.hasOwnProperty('_ownFields')) {\n      this._ownFields = new Map();\n    }\n    return this._ownFields;\n  }\n  \n  static get fields() {\n    if(this.hasOwnProperty('_fields')) {\n      return this._fields;\n    }\n    var res = new Map(),\n        parentClass = this.parentType;\n    \n    var maps = [this.ownFields];\n    \n    if(parentClass.prototype instanceof Model) {\n      var parentFields = parentClass.fields;\n      if(parentFields) {\n        maps.push(parentClass.fields);\n      }\n    }\n    \n    for(var i = 0; i < maps.length; i++) {\n      maps[i].forEach(function(field, name) {\n        res.set(name, field);\n      });\n    }\n    \n    return this._fields = res;\n  }\n\n  static get attributes() {\n    if(this.hasOwnProperty('_attributes')) {\n      return this._attributes;\n    }\n    var res = new Map();\n    this.fields.forEach(function(options, name) {\n      if(options.kind === 'attribute') {\n        res.set(name, options);\n      }\n    });\n    return this._attributes = res;\n  }\n\n  static get relationships() {\n    if(this.hasOwnProperty('_relationships')) {\n      return this._relationships;\n    }\n    var res = new Map();\n    this.fields.forEach(function(options, name) {\n      if(options.kind === 'belongsTo' || options.kind === 'hasMany') {\n        res.set(name, options);\n      }\n    });\n    return this._relationships = res;\n  }\n\n  get attributes() {\n    return this.constructor.attributes;\n  }\n  \n  get fields() {\n    return this.constructor.fields;\n  }\n\n  get loadedAttributes() {\n    var res = new Map();\n    this.attributes.forEach(function(options, name) {\n      if(this.isFieldLoaded(name)) {\n        res.set(name, options);\n      }\n    }, this);\n    return res;\n  }\n\n  get relationships() {\n    return this.constructor.relationships;\n  }\n\n  get loadedRelationships() {\n    var res = new Map();\n    this.relationships.forEach(function(options, name) {\n      if(this.isFieldLoaded(name)) {\n        res.set(name, options);\n      }\n    }, this);\n    return res;\n  }\n  \n  metaWillChange(name) {\n    \n  }\n  \n  metaDidChange(name) {\n    \n  }\n\n  attributeWillChange(name) {\n    var session = this.session;\n    if(session) {\n      session.modelWillBecomeDirty(this);\n    }\n  }\n\n  attributeDidChange(name) {\n\n  }\n\n  belongsToWillChange(name) {\n    if(this._suspendedRelationships) {\n      return;\n    }\n    var inverseModel = this[name],\n        session = this.session;\n    if(session && inverseModel) {\n      session.inverseManager.unregisterRelationship(this, name, inverseModel);\n    }\n  }\n\n  belongsToDidChange(name) {\n    if(this._suspendedRelationships) {\n      return;\n    }\n    var inverseModel = this[name],\n        session = this.session;\n    if(session && inverseModel) {\n      session.inverseManager.registerRelationship(this, name, inverseModel);\n    }\n  }\n\n  hasManyWillChange(name) {\n    // XXX: unregister all?\n  }\n\n  hasManyDidChange(name) {\n    // XXX: reregister\n  }\n  \n  //\n  // DEPRECATED back-compat methods below, instead should use es6 iterators\n  //\n  eachAttribute(callback, binding) {\n    this.attributes.forEach(function(options, name) {\n      callback.call(binding, name, options);\n    });\n  }\n\n  eachLoadedAttribute(callback, binding) {\n    this.loadedAttributes.forEach(function(options, name) {\n      callback.call(binding, name, options);\n    });\n  }\n  \n  eachRelationship(callback, binding) {\n    this.relationships.forEach(function(options, name) {\n      callback.call(binding, name, options);\n    });\n  }\n  \n  static eachRelationship(callback, binding) {\n    this.relationships.forEach(function(options, name) {\n      callback.call(binding, name, options);\n    });\n  }\n  \n  static get parentType() {\n    return Object.getPrototypeOf(this);\n  }\n\n  eachLoadedRelationship(callback, binding) {\n    this.loadedRelationships.forEach(function(options, name) {\n      callback.call(binding, name, options);\n    });\n  }\n  \n  /**\n    Traverses the object graph rooted at this model, invoking the callback.\n  */\n  eachRelatedModel(callback, binding, cache) {\n    if(!cache) cache = new Set();\n    if(cache.has(this)) return;\n    cache.add(this);\n    callback.call(binding || this, this);\n\n    this.eachLoadedRelationship(function(name, relationship) {\n      if(relationship.kind === 'belongsTo') {\n        var child = this[name];\n        if(!child) return;\n        this.eachRelatedModel.call(child, callback, binding, cache);\n      } else if(relationship.kind === 'hasMany') {\n        var children = this[name];\n        children.forEach(function(child) {\n          this.eachRelatedModel.call(child, callback, binding, cache);\n        }, this);\n      }\n    }, this);\n  }\n  \n  /**\n    Given a callback, iterates over each child (1-level deep relation).\n\n    @param {Function} callback the callback to invoke\n    @param {any} binding the value to which the callback's `this` should be bound\n  */\n  eachChild(callback, binding) {\n    this.eachLoadedRelationship(function(name, relationship) {\n      if(relationship.kind === 'belongsTo') {\n        var child = this[name];\n        if(child) {\n          callback.call(binding, child);\n        }\n      } else if(relationship.kind === 'hasMany') {\n        var children = this[name];\n        children.forEach(function(child) {\n          callback.call(binding, child);\n        }, this);\n      }\n    }, this);\n  }\n  \n  /**\n    @private\n\n    The goal of this method is to temporarily disable specific observers\n    that take action in response to application changes.\n\n    This allows the system to make changes (such as materialization and\n    rollback) that should not trigger secondary behavior (such as setting an\n    inverse relationship or marking records as dirty).\n\n    The specific implementation will likely change as Ember proper provides\n    better infrastructure for suspending groups of observers, and if Array\n    observation becomes more unified with regular observers.\n  */\n  suspendRelationshipObservers(callback, binding) {\n    // could be nested\n    if(this._suspendedRelationships) {\n      return callback.call(binding || this);\n    }\n\n    try {\n      this._suspendedRelationships = true;\n      callback.call(binding || this);\n    } finally {\n      this._suspendedRelationships = false;\n    }\n  }\n  \n  static inverseFor(name) {\n    var relationship = this.relationships.get(name);\n    if (!relationship) { return null; }\n    \n    var inverseType = relationship.type;\n\n    if (typeof relationship.inverse !== 'undefined') {\n      var inverseName = relationship.inverse;\n      return inverseName && inverseType.relationships.get(inverseName);\n    }\n    \n    var possibleRelationships = findPossibleInverses(this, inverseType);\n\n    if (possibleRelationships.length === 0) { return null; }\n\n    console.assert(possibleRelationships.length === 1, \"You defined the '\" + name + \"' relationship on \" + this + \" but multiple possible inverse relationships of type \" + this + \" were found on \" + inverseType + \".\");\n\n    function findPossibleInverses(type, inverseType, possibleRelationships) {\n      possibleRelationships = possibleRelationships || [];\n      \n      var relationships = inverseType.relationships;\n      \n      var typeKey = type.typeKey;\n      // Match inverse based on typeKey\n      var propertyName = camelize(typeKey);\n      var inverse = relationships.get(propertyName) || relationships.get(pluralize(propertyName));\n      if(inverse) {\n        possibleRelationships.push(inverse);\n      }\n      \n      var parentType = type.parentType;\n      if (parentType && parentType.typeKey) {\n        // XXX: container extends models and this logic creates duplicates\n        // XXX: add test for subclassing and extending the schema\n        // findPossibleInverses(parentType, inverseType, possibleRelationships);\n      }\n      return possibleRelationships;\n    }\n\n    return possibleRelationships[0];\n  }\n}\n\n/**\n  The embedded parent of this model.\n  @private\n*/\nModel.prototype._parent = null;\n\nfunction sessionAlias(name) {\n  return function () {\n    var session = this.session;\n    console.assert(session, \"Cannot call \" + name + \" on a detached model\");\n    var args = [].splice.call(arguments,0);\n    args.unshift(this);\n    return session[name].apply(session, args);\n  };\n}\n\nfunction getMeta(name) {\n  return this._meta[name];\n}\n\nfunction setMeta(name, value) {\n  var oldValue = this._meta[name];\n  if(oldValue === value) return oldValue;\n  this.metaWillChange(name);\n  this._meta[name] = value;\n  this.metaDidChange(name);\n  return value;\n}\n\n\nModel.reopen({\n  load: sessionAlias('loadModel'),\n  refresh: sessionAlias('refresh'),\n  deleteModel: sessionAlias('deleteModel'),\n  remoteCall: sessionAlias('remoteCall'),\n  markClean: sessionAlias('markClean'),\n  invalidate: sessionAlias('invalidate'),\n  touch: sessionAlias('touch')\n});\n\n/**\n  @private\n  \n  \"reification\" happens when the type is looked up on the context. This process\n  translates the String typeKeys into their corresponding classes.\n*/\nModel._isReified = false;\nModel.reify = function(context) {\n  if(this._isReified) return;\n  \n  // no need to reify the root class\n  if(this === Model) {\n    return;\n  }\n  \n  console.assert(this.typeKey, \"Model must have static 'typeKey' property set.\");\n  \n  if(this.parentType && typeof this.parentType.reify === 'function') {\n    this.parentType.reify(context);\n  }\n  \n  // eagerly set to break loops\n  this._isReified = true;\n  \n  this.relationships.forEach(function(relationship) {\n    if(!relationship.type) {\n      relationship.type = context.typeFor(relationship.typeKey);\n    }\n    if(!relationship.type) {\n      throw new Error(\"Could not find a type for '\" + relationship.name + \"' with typeKey '\" + relationship.typeKey + \"'\");\n    }\n    if(!relationship.type.typeKey) {\n      throw new Error(\"Relationship '\" + relationship.name + \"' has no typeKey\");\n    }\n    if(!relationship.typeKey) {\n      relationship.typeKey = relationship.type.typeKey;\n    }\n  });\n}\n","import Field  from './field'\n\nexport default class Relationship extends Field {\n  \n  constructor(name, options) {\n    // make sure typeKey is set\n    console.assert(options.type || options.typeKey, \"Must specify a `type` or `typeKey` option\");\n    if(typeof options.type === \"string\") {\n      var typeKey = options.type;\n      delete options.type;\n      options.typeKey = typeKey;\n    } else if(!options.typeKey) {\n      options.typeKey = options.type.typeKey;\n    }\n    super(name, options);\n  }\n  \n}\n","/**\n  @module coalesce\n*/\n\n/**\n  @class Coalesce\n  @static\n*/\n\n//\n// Required global libraries\n//\n\nvar global = (this || window);\n\nvar ajax = global.jQuery && global.jQuery.ajax,\n    Backburner = global.Backburner;\n\nvar Coalesce = {\n  VERSION: '0.4.0+dev.12238b19',\n  Promise: Promise,\n  ajax: ajax\n};\n\nif(Backburner) {\n  Coalesce.backburner = new Backburner(['actions']);\n}\n\nexport default Coalesce;\n","import Adapter  from '../adapter'\nimport ModelSet  from '../collections/model_set'\nimport Coalesce  from '../namespace'\nimport array_from  from '../utils/array_from'\nimport { decamelize, pluralize, camelize } from '../utils/inflector'\n\nvar defaults = _.defaults;\n\n/**\n  The REST adapter allows your store to communicate with an HTTP server by\n  transmitting JSON via XHR. Most Coalesce.js apps that consume a JSON API\n  should use the REST adapter.\n\n  This adapter is designed around the idea that the JSON exchanged with\n  the server should be conventional.\n\n  ## JSON Structure\n\n  The REST adapter expects the JSON returned from your server to follow\n  these conventions.\n\n  ### Object Root\n\n  The JSON payload should be an object that contains the record inside a\n  root property. For example, in response to a `GET` request for\n  `/posts/1`, the JSON should look like this:\n\n  ```js\n  {\n    \"post\": {\n      \"title\": \"I'm Running to Reform the W3C's Tag\",\n      \"author\": \"Yehuda Katz\"\n    }\n  }\n  ```\n\n  ### Conventional Names\n\n  Attribute names in your JSON payload should be the camelCased versions of\n  the attributes in your Coalesce.js models.\n\n  For example, if you have a `Person` model:\n\n  ```js\n  App.Person = Coalesce.Model.extend({\n    firstName: Coalesce.attr('string'),\n    lastName: Coalesce.attr('string'),\n    occupation: Coalesce.attr('string')\n  });\n  ```\n\n  The JSON returned should look like this:\n\n  ```js\n  {\n    \"person\": {\n      \"firstName\": \"Barack\",\n      \"lastName\": \"Obama\",\n      \"occupation\": \"President\"\n    }\n  }\n  ```\n\n  ## Customization\n\n  ### Endpoint path customization\n\n  Endpoint paths can be prefixed with a `namespace` by setting the namespace\n  property on the adapter:\n\n  ```js\n  Coalesce.RestAdapter.reopen({\n    namespace: 'api/1'\n  });\n  ```\n  Requests for `App.Person` would now target `/api/1/people/1`.\n\n  ### Host customization\n\n  An adapter can target other hosts by setting the `host` property.\n\n  ```js\n  Coalesce.RestAdapter.reopen({\n    host: 'https://api.example.com'\n  });\n  ```\n\n  ### Headers customization\n\n  Some APIs require HTTP headers, e.g. to provide an API key. An array of\n  headers can be added to the adapter which are passed with every request:\n\n  ```js\n   Coalesce.RestAdapter.reopen({\n    headers: {\n      \"API_KEY\": \"secret key\",\n      \"ANOTHER_HEADER\": \"Some header value\"\n    }\n  });\n  ```\n\n  @class RestAdapter\n  @constructor\n  @namespace rest\n  @extends Adapter\n*/\nexport default class RestAdapter extends Adapter {\n  constructor() {\n    super(...arguments);\n    this._pendingOps = {};\n  }\n\n  load(model, opts, session) {\n    return this._mergeAndContextualizePromise(this._load(model, opts), session, model, opts);\n  }\n\n  _load(model, opts) {\n    opts = opts || {};\n    _.defaults(opts, {\n      type: 'GET'\n    });\n    return this._remoteCall(model, null, null, opts);\n  }\n\n  update(model, opts, session) {\n    return this._mergeAndContextualizePromise(this._update(model, opts), session, model, opts);\n  }\n\n  _update(model, opts) {\n    opts = opts || {};\n    _.defaults(opts, {\n      type: 'PUT'\n    });\n    return this._remoteCall(model, null, model, opts);\n  }\n\n  create(model, opts, session) {\n    return this._mergeAndContextualizePromise(this._create(model, opts), session, model, opts);\n  }\n\n  _create(model, opts) {\n    return this._remoteCall(model, null, model, opts);\n  }\n\n  deleteModel(model, opts, session) {\n    return this._mergeAndContextualizePromise(this._deleteModel(model, opts), session, model, opts);\n  }\n\n  _deleteModel(model, opts) {\n    opts = opts || {};\n    _.defaults(opts, {\n      type: 'DELETE'\n    });\n    return this._remoteCall(model, null, null, opts);\n  }\n\n  query(typeKey, query, opts, session) {\n    return this._mergeAndContextualizePromise(this._query(typeKey, query, opts), session, typeKey, opts);\n  }\n\n  _query(typeKey, query, opts) {\n    opts = opts || {};\n    _.defaults(opts, {\n      type: 'GET',\n      serialize: false,\n      deserializer: 'payload',\n    });\n    return this._remoteCall(typeKey, null, query, opts);\n  }\n\n  /**\n    Calls a custom endpoint on the remote server.\n\n    The following options are available inside the options hash:\n\n    * `type`: The request method. Defaults to `POST`.\n    * `serialize`: Whether or not to serialize the passed in data\n    * `serializer`: The name of the serializer to use on the passed in data\n    * `deserialize`: Whether or not to deserialize the returned data\n    * `deserializer`: The name of the serializer to use to deserialize returned data (defaults to `serializer`)\n    * `serializerOptions`: Options to be passed to the serializer's `serialize`/`deserialize` methods\n    * `params`: Additional raw parameters to be added to the final serialized hash sent to the server\n    * `url`: A custom url to use\n\n    @method remoteCall\n    @param {any} context the model or type that is used as the context of the call\n    @param String name the name of the action to be called\n    @param Object [opts] an options hash\n    @param Session [session] the session to merge the results into\n  */\n  remoteCall(context, name, data, opts, session) {\n    var serialize = data && !!data.isModel;\n    opts = opts || {};\n    _.defaults(opts, {\n      serialize: serialize,\n      deserializer: 'payload'\n    });\n    return this._mergeAndContextualizePromise(this._remoteCall(context, name, data, opts), session, context, opts);\n  }\n\n  _remoteCall(context, name, data, opts) {\n    var adapter = this,\n        opts = this._normalizeOptions(opts),\n        url;\n\n    if(opts.url) {\n      url = opts.url;\n    } else {\n      url = this.buildUrlFromContext(context, name);\n    }\n\n    var method = opts.type || \"POST\";\n\n    if(opts.serialize !== false) {\n      var serializer = opts.serializer,\n          serializerOptions = opts.serializerOptions || {};\n\n      if(!serializer && context) {\n        serializer = this.serializerForContext(context);\n      }\n\n      if(serializer && data) {\n        serializer = this._serializerFor(serializer);\n        serializerOptions = _.defaults(serializerOptions, {context: context});\n        data = serializer.serialize(data, serializerOptions);\n      }\n    }\n\n    if(opts.params) {\n      data = data || {};\n      data = _.defaults(data, opts.params);\n    }\n\n    return this._deserializePromise(this.ajax(url, method, {data: data}), context, opts);\n  }\n\n  _normalizeOptions(opts) {\n    opts = opts || {};\n    // make sure that the context is a typeKey instead of a type\n    if(opts.serializerOptions && typeof opts.serializerOptions.context === 'function') {\n      opts.serializerOptions.context = opts.serializerOptions.context.typeKey;\n    }\n    return opts;\n  }\n\n  serializerForContext(context) {\n    return this.defaultSerializer;\n  }\n  \n  /**\n    @private\n\n    Deserialize the contents of a promise.\n  */\n  _deserializePromise(promise, context, opts) {\n    var serializer = opts.deserializer || opts.serializer,\n        serializerOptions = opts.serializerOptions || {};\n\n    if(!serializer && context) {\n      serializer = this.serializerForContext(context);\n    }\n\n    if(serializer) {\n      serializer = this._serializerFor(serializer);\n      _.defaults(serializerOptions, {context: context});\n    }\n\n    var adapter = this;\n    return promise.then(function(data){\n      if(opts.deserialize !== false) {\n        return serializer.deserialize(data, serializerOptions);\n      }\n\n      return data;\n    }, function(xhr) {\n      if(opts.deserialize !== false) {\n        var data;\n        if(xhr.responseText) {\n          data = JSON.parse(xhr.responseText);\n        } else {\n          data = {};\n        }\n        \n        serializerOptions = defaults(serializerOptions, {context: context, xhr: xhr});\n        \n        // TODO: handle other errors codes such as 409\n        // determine serializer behavior off of xhr response code\n        if(xhr.status === 422) {\n          // in the event of a 422 response, handle a full payload, possibly with\n          // models that have `error` properties, therefore we just use the same\n          // serializer that we use in the success case\n          throw serializer.deserialize(data, serializerOptions);\n        } else {\n          // treat other errors generically\n          serializer = adapter._serializerFor(opts.errorSerializer || 'errors');\n          var errors = serializer.deserialize(data, serializerOptions);\n          if(context && context.isModel) {\n            // if the context is a model we want to return a model with errors\n            // so that it can be merged by the session\n            var model = context.lazyCopy();\n            model.errors = errors;\n            throw model;\n          }\n          throw errors;\n        }\n      }\n      throw xhr;\n    });\n  }\n\n  /**\n    @private\n\n    Merge the contents of the promise into the session.\n  */\n  _mergePromise(promise, session, opts) {\n    if(opts && opts.deserialize === false) {\n      return promise;\n    }\n\n    function merge(deserialized) {\n      if(typeof deserialized.merge === 'function') {\n        return deserialized.merge(session);\n      } else if(deserialized.isModel) {\n        return session.merge(deserialized);\n      }\n      return deserialized;\n    }\n\n    return promise.then(function(deserialized) {\n      return merge(deserialized);\n    }, function(deserialized) {\n      throw merge(deserialized);\n    });\n  }\n\n  /**\n    @private\n\n    Transform the promise's resolve value to the context\n    of the particular operation. E.g. a load operation may\n    return a complex payload consisting of many models. In\n    this case we want to just return the model that\n    corresponds to the load.\n  */\n  _contextualizePromise(promise, context, opts) {\n    if(opts && opts.deserializationContext !== undefined) {\n      context = opts.deserializationContext;\n    }\n\n    function contextualize(merged) {\n      // payloads detect their context during deserialization\n      if(context && merged.isPayload) {\n        var result = merged.context;\n        // the server might not return any data for the context\n        // of the operation (e.g. a delete with an empty response)\n        // in this case we just echo back the client's version\n        if(!result) {\n          result = context;\n        }\n        result.meta = merged.meta;\n        // TODO: we might want to merge errors here\n        if(merged.errors && (!result.errors || result === context)) {\n          result.errors = merged.errors;\n        }\n        return result;\n      }\n\n      return merged;\n    }\n\n    return promise.then(function(merged) {\n      return contextualize(merged);\n    }, function(merged) {\n      throw contextualize(merged);\n    });\n  }\n\n  /**\n    @private\n\n    Composition of `_mergePromise` and `_contextualizePromise`.\n  */\n  _mergeAndContextualizePromise(promise, session, context, opts) {\n    return this._contextualizePromise(this._mergePromise(promise, session, opts), context, opts);\n  }\n\n  /**\n    Useful for manually merging in payload data.\n\n    @method mergePayload\n    @param Object data the raw payload data\n    @param {any} [context] the context of the payload. This property will dictate the return value of this method.\n    @param Session [session] the session to merge into. Defaults to the main session.\n    @returns {any} The result of the merge contextualized to the context. E.g. if 'post' is the context, this will return all posts that are part of the payload.\n  */\n  mergePayload(data, context, session) {\n    var payload = this.deserialize('payload', data, {context: context});\n    if(!session) {\n      session = this.container.lookup('session:main');\n    }\n    payload.merge(session);\n    if(context) {\n      return payload.context;\n    }\n    return payload;\n  }\n\n  /**\n    Returns whether or not the passed in relationship\n    is the \"owner\" of the relationship. This defaults\n    to true for belongsTo and false for hasMany\n  */\n  isRelationshipOwner(relationship) {\n    var owner = relationship.owner;\n    // TODO: use lack of an inverse to determine this value as well\n    return relationship.kind === 'belongsTo' && owner !== false ||\n      relationship.kind === 'hasMany' && owner === true\n  }\n  \n  isDirtyFromRelationships(model, cached, relDiff) {\n    for(var i = 0; i < relDiff.length; i++) {\n      var diff = relDiff[i];\n      if(this.isRelationshipOwner(diff.relationship) || model.isEmbedded) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  shouldSave(model) {\n    return !model.isEmbedded;\n  }\n\n  /**\n    Builds a URL from a context. A context can be one of three things:\n\n    1. An instance of a model\n    2. A string representing a type (typeKey), e.g. 'post'\n    3. A hash containing both a typeKey and an id\n\n    @method buildUrlFromContext\n    @param {any} context\n    @param {String} action\n    @returns {String} url\n  */\n  buildUrlFromContext(context, action) {\n    var typeKey, id;\n    if(typeof context === 'string') {\n      typeKey = context;\n    } else {\n      typeKey = context.typeKey;\n      id = context.id;\n    }\n    var url = this.buildUrl(typeKey, id);\n    if(action) {\n      // TODO: hook to transform action name\n      url = url + '/' + action;\n    }\n    return url;\n  }\n\n  /**\n    Builds a URL for a given type and optional ID.\n\n    By default, it pluralizes the type's name (for example, 'post'\n    becomes 'posts' and 'person' becomes 'people'). To override the\n    pluralization see [pathForType](#method_pathForType).\n\n    If an ID is specified, it adds the ID to the path generated\n    for the type, separated by a `/`.\n\n    @method buildUrl\n    @param {String} type\n    @param {String} id\n    @returns {String} url\n  */\n  buildUrl(typeKey, id) {\n    var url = [],\n        host = this.host,\n        prefix = this.urlPrefix();\n\n    if (typeKey) { url.push(this.pathForType(typeKey)); }\n    if (id) { url.push(encodeURIComponent(id)); }\n\n    if (prefix) { url.unshift(prefix); }\n\n    url = url.join('/');\n    if (!host && url) { url = '/' + url; }\n\n    return url;\n  }\n\n  /**\n    @method urlPrefix\n    @private\n    @param {String} path\n    @param {String} parentUrl\n    @return {String} urlPrefix\n  */\n  urlPrefix(path, parentURL) {\n    var host = this.host,\n        namespace = this.namespace,\n        url = [];\n\n    if (path) {\n      // Absolute path\n      if (path.charAt(0) === '/') {\n        if (host) {\n          path = path.slice(1);\n          url.push(host);\n        }\n      // Relative path\n      } else if (!/^http(s)?:\\/\\//.test(path)) {\n        url.push(parentURL);\n      }\n    } else {\n      if (host) { url.push(host); }\n      if (namespace) { url.push(namespace); }\n    }\n\n    if (path) {\n      url.push(path);\n    }\n\n    return url.join('/');\n  }\n\n  /**\n    Determines the pathname for a given type.\n\n    By default, it pluralizes the type's name (for example,\n    'post' becomes 'posts' and 'person' becomes 'people').\n\n    ### Pathname customization\n\n    For example if you have an object LineItem with an\n    endpoint of \"/line_items/\".\n\n    ```js\n    Coalesce.RESTAdapter.reopen({\n      pathForType(type) {\n        var decamelized = decamelize(type);\n        return pluralize(decamelized);\n      };\n    });\n    ```\n\n    @method pathForType\n    @param {String} type\n    @returns {String} path\n  **/\n  pathForType(type) {\n    var camelized = camelize(type);\n    return pluralize(camelized);\n  }\n\n  /**\n    Takes an ajax response, and returns a relevant error.\n\n    Returning a `Coalesce.InvalidError` from this method will cause the\n    record to transition into the `invalid` state and make the\n    `errors` object available on the record.\n\n    ```javascript\n    App.ApplicationAdapter = Coalesce.RESTAdapter.extend({\n      ajaxError(jqXHR) {\n        var error = this._super(jqXHR);\n\n        if (jqXHR && jqXHR.status === 422) {\n          var jsonErrors = jQuery.parseJSON(jqXHR.responseText)[\"errors\"];\n\n          return new Coalesce.InvalidError(jsonErrors);\n        } else {\n          return error;\n        }\n      }\n    });\n    ```\n\n    Note: As a correctness optimization, the default implementation of\n    the `ajaxError` method strips out the `then` method from jquery's\n    ajax response (jqXHR). This is important because the jqXHR's\n    `then` method fulfills the promise with itself resulting in a\n    circular \"thenable\" chain which may cause problems for some\n    promise libraries.\n\n    @method ajaxError\n    @param  {Object} jqXHR\n    @return {Object} jqXHR\n  */\n  ajaxError(jqXHR) {\n    if (jqXHR && typeof jqXHR === 'object') {\n      jqXHR.then = null;\n    }\n\n    return jqXHR;\n  }\n\n  /**\n    Takes a URL, an HTTP method and a hash of data, and makes an\n    HTTP request.\n\n    When the server responds with a payload, Coalesce Data will call into `extractSingle`\n    or `extractArray` (depending on whether the original query was for one record or\n    many records).\n\n    By default, `ajax` method has the following behavior:\n\n    * It sets the response `dataType` to `\"json\"`\n    * If the HTTP method is not `\"GET\"`, it sets the `Content-Type` to be\n      `application/json; charset=utf-8`\n    * If the HTTP method is not `\"GET\"`, it stringifies the data passed in. The\n      data is the serialized record in the case of a save.\n    * Registers success and failure handlers.\n\n    @method ajax\n    @private\n    @param {String} url\n    @param {String} type The request type GET, POST, PUT, DELETE etc.\n    @param {Object} hash\n    @return {Promise} promise\n  */\n  ajax(url, type, hash) {\n    var adapter = this;\n\n    return new Coalesce.Promise(function(resolve, reject) {\n      hash = adapter.ajaxOptions(url, type, hash);\n\n      hash.success = function(json) {\n        Coalesce.backburner.run(null, resolve, json);\n      };\n\n      hash.error = function(jqXHR, textStatus, errorThrown) {\n        Coalesce.backburner.run(null, reject, adapter.ajaxError(jqXHR));\n      };\n\n      Coalesce.ajax(hash);\n    }, \"Coalesce: RestAdapter#ajax \" + type + \" to \" + url);\n  }\n\n  /**\n    @method ajaxOptions\n    @private\n    @param {String} url\n    @param {String} type The request type GET, POST, PUT, DELETE etc.\n    @param {Object} hash\n    @return {Object} hash\n  */\n  ajaxOptions(url, type, hash) {\n    hash = hash || {};\n    hash.url = url;\n    hash.type = type;\n    hash.dataType = 'json';\n    hash.context = this;\n\n    if (hash.data && type !== 'GET') {\n      hash.contentType = 'application/json; charset=utf-8';\n      hash.data = JSON.stringify(hash.data);\n    }\n\n    var headers = this.headers;\n    if (headers !== undefined) {\n      hash.beforeSend = function (xhr) {\n        for(var key in headers) {\n          if(!headers.hasOwnProperty(key)) continue;\n          xhr.setRequestHeader(key, headers[key]);\n        }\n      };\n    }\n\n    return hash;\n  }\n  \n  serializerForContext(context) {\n    return 'payload';\n  }\n\n}\n\nRestAdapter.reopen({\n  defaultSerializer: 'payload'\n});\n","import Context  from '../context/default'\nimport RestAdapter  from './adapter'\nimport RestErrorsSerializer  from './serializers/errors'\nimport PayloadSerializer  from './serializers/payload'\n\nexport default class RestContext extends Context {\n  \n  _setupContainer() {\n    super._setupContainer()\n    var container = this.container;\n    \n    container.register('adapter:default', container.lookupFactory('adapter:application') || RestAdapter);\n    \n    container.register('serializer:errors', RestErrorsSerializer);\n    container.register('serializer:payload', PayloadSerializer);\n  }\n  \n}\n","var isArray = Array.isArray;\n\nimport ModelSet from '../collections/model_set';\nimport array_from from '../utils/array_from';\n\nclass Payload extends ModelSet {\n\n  constructor(iterable) {\n    super(iterable)\n    this.isPayload = true;\n    this.context = null;\n    this.meta = null;\n  }\n  \n  merge(session) {\n    var merged = array_from(this).map(function(model) {\n      return session.merge(model);\n    }, this);\n    var context = this.context;\n    if(context && isArray(context)) {\n      context = context.map(function(model) {\n        return session.getModel(model);\n      });\n    } else if(context) {\n      context = session.getModel(context);\n    }\n    var result = new Payload(merged);\n    result.context = context;\n    result.meta = this.meta;\n    result.errors = this.errors;\n    return result;\n  }\n\n}\n\nexport default Payload;\n","import Serializer from '../../serializers/base';\nimport Error from '../../error';\nimport {camelize} from '../../utils/inflector';\nimport isEmpty from '../../utils/is_empty';\n\nexport default class ErrorsSerializer extends Serializer {\n\n  deserialize(serialized, opts) {\n    var xhr = opts && opts.xhr;\n    \n    if(!xhr && (isEmpty(serialized) || isEmptyObject(serialized))) return;\n    \n    var Type = this.container.lookupFactory('model:errors');\n    var res = Type.create();\n    \n    for(var key in serialized) {\n      res.set(this.transformPropertyKey(key), serialized[key]);\n    }\n    \n    if(xhr) {\n      res.status = xhr.status;\n      res.xhr = xhr;\n    }\n    \n    return res;\n  }\n  \n  transformPropertyKey(name) {\n    return camelize(name);\n  }\n\n  serialize(id) {\n    throw new Error(\"Errors are not currently serialized down to the server.\");\n  }\n\n}\n\nfunction isEmptyObject(obj) {\n  return Object.keys(obj).length === 0;\n}\n","import materializeRelationships from '../../utils/materialize_relationships';\nimport Serializer from '../../serializers/base';\nimport Payload from '../payload';\nimport {singularize} from '../../utils/inflector';\n\nexport default class PayloadSerializer extends Serializer {\n\n  singularize(name) {\n    return singularize(name);\n  }\n\n  typeKeyFor(name) {\n    var singular = this.singularize(name),\n        aliases = this.aliases,\n        alias = aliases[name];\n    return alias || singular;\n  }\n\n  rootForTypeKey(typeKey) {\n    return typeKey;\n  }\n\n  /**\n    Note: we serialize a model, but we deserialize\n    to a payload object.\n  */\n  serialize(model) {\n    var typeKey = model.typeKey,\n        root = this.rootForTypeKey(typeKey),\n        res = {},\n        serializer = this.serializerFor(typeKey);\n    res[root] = serializer.serialize(model);\n    return res;\n  }\n\n  deserialize(hash, opts) {\n    opts = opts || {};\n    var result = new Payload(),\n        metaKey = this.metaKey,\n        errorsKey = this.errorsKey,\n        context = opts.context,\n        xhr = opts.xhr;\n\n    if(context && typeof context === 'string') {\n      result.context = [];\n    }\n\n    /**\n      If a context for the payload has been specified\n      we need to check each model to see if it is/belongs in\n      the context\n    */\n    function checkForContext(model) {\n      if(context) {\n        if(typeof context === 'string' && typeKey === context) {\n          // context is a typeKey (e.g. for a query)\n          result.context.push(model);\n        } else if(context.isModel && context.isEqual(model)) {\n          // context is a model\n          result.context = model;\n        }\n      }\n    }\n\n    for (var prop in hash) {\n      if (!hash.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      if(prop === metaKey) {\n        result.meta = hash[prop];\n        continue;\n      }\n\n      var value = hash[prop];\n\n      if(prop === errorsKey) {\n        var serializer = this.serializerFor('errors', opts),\n            errors = serializer.deserialize(value, opts);\n        result.errors = errors;\n        continue;\n      }\n\n      var typeKey = this.typeKeyFor(prop),\n          serializer = this.serializerFor(typeKey);\n      console.assert(!!serializer, `No serializer found for '${typeKey}'`);\n      if (Array.isArray(value)) {\n        for (var i=0; i < value.length; i++) {\n          var model = serializer.deserialize(value[i]);\n          checkForContext(model);\n          result.add(model);\n        }\n      } else {\n        var model = serializer.deserialize(value);\n        checkForContext(model);\n        result.add(model);\n      }\n    }\n    \n    // Ensure that an errors object exists if the request\n    // failed. Right now we just check the existence of an\n    // xhr object (which is only set on error).\n    if(xhr) {\n      var errors = result.errors;\n      if(!errors) {\n        var serializer = this.serializerFor('errors'),\n            errors = serializer.deserialize({}, opts);\n        result.errors = errors;\n      }\n    }\n\n    materializeRelationships(result, this.idManager);\n\n    return result;\n  }\n\n}\n\nPayloadSerializer.reopen({\n  metaKey: 'meta',\n  aliases: {},\n  errorsKey: 'errors'\n});\n","import BaseClass from '../utils/base_class';\n\n/**\n  Base class for serialization/deserialization\n\n  @namespace serializers\n  @class Base\n*/\nexport default class Base extends BaseClass {\n\n  serialize() {}\n  \n  deserialize() {}\n\n  serializerFor(typeKey) {\n    return this.context.configFor(typeKey).get('serializer');\n  }\n\n}\n","import Serializer from './base';\n\n/**\n  @namespace serializers\n  @class BelongsToSerializer\n*/\nexport default class BelongsToSerializer extends Serializer {\n\n  deserialize(serialized, opts) {\n    if(!serialized) {\n      return null;\n    }\n    if(!opts.embedded) {\n      var idSerializer = this.serializerFor('id');\n      serialized = {\n        id: idSerializer.deserialize(serialized)\n      };\n      opts.reifyClientId = false;\n    }\n    return this.deserializeModel(serialized, opts);\n  }\n\n  deserializeModel(serialized, opts) {\n    var serializer = this.serializerFor(opts.typeKey);\n    return serializer.deserialize(serialized, opts);\n  }\n\n  serialize(model, opts) {\n    if(!model) {\n      return null;\n    }\n    if(opts.embedded) {\n      return this.serializeModel(model, opts);\n    }\n    var idSerializer = this.serializerFor('id');\n    return idSerializer.serialize(model.id);\n  }\n\n  serializeModel(model, opts) {\n    var serializer = this.serializerFor(opts.typeKey);\n    return serializer.serialize(model);\n  }\n\n}\n","import Serializer from './base';\n\n/**\n  @namespace serializers\n  @class BooleanSerializer\n*/\nexport default class BooleanSerializer extends Serializer {\n  deserialize(serialized) {\n    var type = typeof serialized;\n\n    if (type === \"boolean\") {\n      return serialized;\n    } else if (type === \"string\") {\n      return serialized.match(/^true$|^t$|^1$/i) !== null;\n    } else if (type === \"number\") {\n      return serialized === 1;\n    } else {\n      return false;\n    }\n  }\n\n  serialize(deserialized) {\n    return Boolean(deserialized);\n  }\n}\n","import Serializer from './base';\nimport parseDate from '../utils/parse_date';\n\n/**\n  @namespace serializers\n  @class DateSerializer\n*/\nexport default class DateSerializer extends Serializer {\n\n  deserialize(serialized) {\n    var type = typeof serialized;\n\n    if (type === \"string\") {\n      return new Date(parseDate(serialized));\n    } else if (type === \"number\") {\n      return new Date(serialized);\n    } else if (serialized === null || serialized === undefined) {\n      // if the value is not present in the data,\n      // return undefined, not null.\n      return serialized;\n    } else {\n      return null;\n    }\n  }\n\n  serialize(date) {\n    if (date instanceof Date) {\n      var days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n      var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n      var pad = function(num) {\n        return num < 10 ? \"0\"+num : \"\"+num;\n      };\n\n      var utcYear = date.getUTCFullYear(),\n          utcMonth = date.getUTCMonth(),\n          utcDayOfMonth = date.getUTCDate(),\n          utcDay = date.getUTCDay(),\n          utcHours = date.getUTCHours(),\n          utcMinutes = date.getUTCMinutes(),\n          utcSeconds = date.getUTCSeconds();\n\n\n      var dayOfWeek = days[utcDay];\n      var dayOfMonth = pad(utcDayOfMonth);\n      var month = months[utcMonth];\n\n      return dayOfWeek + \", \" + dayOfMonth + \" \" + month + \" \" + utcYear + \" \" +\n             pad(utcHours) + \":\" + pad(utcMinutes) + \":\" + pad(utcSeconds) + \" GMT\";\n    } else {\n      return null;\n    }\n  } \n\n}","import isEmpty from '../utils/is_empty';\nimport Serializer from './base';\n\n/**\n  @namespace serializers\n  @class HasManySerializer\n*/\nexport default class HasManySerializer extends Serializer {\n\n  deserialize(serialized, opts) {\n    if(!serialized) return [];\n    if(!opts.embedded) {\n      var idSerializer = this.serializerFor('id');\n      serialized = serialized.map(function(id) {\n        return {\n          id: id\n        };\n      }, this);\n      opts.reifyClientId = false;\n    }\n    return this.deserializeModels(serialized, opts);\n  }\n\n  deserializeModels(serialized, opts) {\n    var serializer = this.serializerFor(opts.typeKey);\n    return serialized.map(function(hash) {\n      return serializer.deserialize(hash, opts);\n    });\n  }\n\n  serialize(models, opts) {\n    if(opts.embedded) {\n      return this.serializeModels(models, opts);\n    }\n    return undefined;\n  }\n\n  serializeModels(models, opts) {\n    var serializer = this.serializerFor(opts.typeKey);\n    return models.map(function(model) {\n      return serializer.serialize(model);\n    });\n  }\n  \n}\n","import Serializer from './base';\n\n/**\n  @namespace serializers\n  @class IdSerializer\n*/\nexport default class IdSerializer extends Serializer {\n\n  deserialize(serialized) {\n    if(serialized === undefined || serialized === null) return;\n    return serialized+'';\n  }\n\n  serialize(id) {\n    if (isNaN(id) || id === null) { return id; }\n    return +id;\n  }\n\n}\n","import { singularize, camelize, underscore, dasherize } from '../utils/inflector';\nimport Serializer  from './base';\n\n/**\n  @namespace serializers\n  @class ModelSerializer\n*/\nexport default class ModelSerializer extends Serializer {\n\n  constructor(...args) {\n    super(...args);\n    this._keyCache = {};\n  }\n\n  keyFor(name, type, opts) {\n    var key;\n    if(key = this._keyCache[name]) {\n      return key;\n    }\n\n    key = opts && opts.key || this.keyForType(name, type, opts);\n    this._keyCache[name] = key;\n    return key;\n  }\n\n  keyForType(name, type, opts) {\n    return underscore(name);\n  }\n\n  /**\n    @private\n\n    Determines the singular root name for a particular type.\n\n    This is an underscored, lowercase version of the model name.\n    For example, the type `App.UserGroup` will have the root\n    `user_group`.\n\n    @param {Coalesce.Model subclass} type\n    @returns {String} name of the root element\n  */\n  rootForType(type) {\n    return type.typeKey;\n  }\n\n  serialize(model) {\n    var serialized = {};\n\n    this.addMeta(serialized, model);\n    this.addAttributes(serialized, model);\n    this.addRelationships(serialized, model);\n\n    return serialized;\n  }\n\n  addMeta(serialized, model) {\n    this.addField(serialized, model, 'id', 'id');\n    this.addField(serialized, model, 'clientId', 'string');\n    this.addField(serialized, model, 'rev', 'revision');\n    this.addField(serialized, model, 'clientRev', 'revision');\n  }\n\n  addAttributes(serialized, model) {\n    model.eachLoadedAttribute(function(name, attribute) {\n      // do not include transient properties\n      if(attribute.transient) return;\n      this.addField(serialized, model, name, attribute.type, attribute);\n    }, this);\n  }\n\n  addRelationships(serialized, model) {\n    model.eachLoadedRelationship(function(name, relationship) {\n      // we dasherize the kind for lookups for consistency\n      var kindKey = dasherize(relationship.kind);\n      this.addField(serialized, model, name, kindKey, relationship);\n    }, this);\n  }\n\n  addField(serialized, model, name, type, opts) {\n    var key = this.keyFor(name, type, opts),\n        value = model[name],\n        serializer;\n\n    if(type) {\n      serializer = this.serializerFor(type);\n    }\n    if(serializer) {\n      value = serializer.serialize(value, opts);\n    }\n    if(value !== undefined) {\n      serialized[key] = value;\n    }\n  }\n\n  deserialize(hash, opts) {\n    var model = this.createModel();\n\n    this.extractMeta(model, hash, opts);\n    this.extractAttributes(model, hash);\n    this.extractRelationships(model, hash);\n\n    return model;\n  }\n\n  extractMeta(model, hash, opts) {\n    this.extractField(model, hash, 'id', 'id');\n    this.extractField(model, hash, 'clientId', 'string');\n    this.extractField(model, hash, 'rev', 'revision');\n    this.extractField(model, hash, 'clientRev', 'revision');\n    this.extractField(model, hash, 'errors', 'errors');\n    if(!opts || opts.reifyClientId !== false) {\n      this.idManager.reifyClientId(model);\n    }\n  }\n\n  extractAttributes(model, hash) {\n    model.eachAttribute(function(name, attribute) {\n      this.extractField(model, hash, name, attribute.type, attribute);\n    }, this);\n  }\n\n  extractRelationships(model, hash) {\n    model.eachRelationship(function(name, relationship) {\n      // we dasherize the kind for lookups for consistency\n      var kindKey = dasherize(relationship.kind);\n      this.extractField(model, hash, name, kindKey, relationship);\n    }, this);\n  }\n\n  extractField(model, hash, name, type, opts) {\n    var key = this.keyFor(name, type, opts),\n        value = hash[key],\n        serializer;\n    if(typeof value === 'undefined') {\n      return;\n    }\n    if(type) {\n      serializer = this.serializerFor(type);\n    }\n    if(serializer) {\n      value = serializer.deserialize(value, opts);\n    }\n    if(typeof value !== 'undefined') {\n      model[name] = value;\n    }\n  }\n\n  createModel() {\n    return this.typeFor(this.typeKey).create();\n  }\n\n  typeFor(typeKey) {\n    return this.context.typeFor(typeKey);\n  }\n\n}\n","import isEmpty from '../utils/is_empty';\nimport Serializer from './base';\n\n/**\n  @namespace serializers\n  @class NumberSerializer\n*/\nexport default class NumberSerializer extends Serializer {\n\n  deserialize(serialized) {\n    return isEmpty(serialized) ? null : Number(serialized);\n  }\n\n  serialize(deserialized) {\n    return isEmpty(deserialized) ? null : Number(deserialized);\n  }\n}\n","import isEmpty from '../utils/is_empty';\n\nimport Serializer from './base';\n\n/**\n  @namespace serializers\n  @class RevisionSerializer\n*/\nexport default class RevisionSerializer extends Serializer {\n\n  deserialize(serialized) {\n    return serialized ? serialized : undefined;\n  }\n\n  serialize(deserialized) {\n    return deserialized ? deserialized : undefined;\n  }\n}\n","import isNone from '../utils/is_none';\nimport Serializer from './base';\n\n/**\n  @namespace serializers\n  @class StringSerializer\n*/\nexport default class StringSerializer extends Serializer {\n\n  deserialize(serialized) {\n    return isNone(serialized) ? null : String(serialized);\n  }\n\n  serialize(deserialized) {\n    return isNone(deserialized) ? null : String(deserialized);\n  }\n\n}\n","/**\n  Handles tracking deleted models and removing from collections.\n\n  @class CollectionManager\n*/\nexport default class CollectionManager {\n\n  constructor() {\n    this.modelMap = {};\n  }\n\n  register(array, model) {\n    var clientId = model.clientId,\n        arrays = this.modelMap[clientId];\n    if(!arrays) {\n      arrays = this.modelMap[clientId] = [];\n    }\n    if(arrays.indexOf(array) !== -1) return;\n    arrays.push(array);\n  }\n\n  unregister(array, model) {\n    var clientId = model.clientId,\n        arrays = this.modelMap[clientId];\n    if(arrays) {\n      _.pull(arrays, array);\n      if(arrays.length === 0) {\n        delete this.modelMap[clientId];\n      }\n    }\n  }\n\n  modelWasDeleted(model) {\n    var clientId = model.clientId,\n        arrays = this.modelMap[clientId];\n\n    if(arrays) {\n      // clone this operation could mutate this array \n        _.clone(arrays).forEach(function(array) {\n        array.removeObject(model);\n      });\n    }\n  }\n\n}\n","import ModelSet  from '../collections/model_set'\nimport Coalesce  from '../namespace'\nimport array_from  from '../utils/array_from'\nimport materializeRelationships  from '../utils/materialize_relationships'\nimport Operation  from './operation'\n\nvar remove = _.remove;\n\nexport default class Flush {\n  \n  constructor(session, models) {\n    this.session = session;\n    this.models = this.buildDirtySet(models);\n    this.shadows = new ModelSet(array_from(this.models).map(function(model) {\n      // shadows are already frozen copies so no need to re-copy\n      return session.shadows.getModel(model) || model.copy();\n    }));\n    this.results = [];\n    this.pending = [];\n    this.ops = new Map();\n    this.build();\n  }\n  \n  build() {\n    var models = this.models,\n        shadows = this.shadows,\n        ops = this.ops,\n        session = this.session;\n        \n    this.removeEmbeddedOrphans(models, shadows, session);\n    \n    // for embedded serialization purposes we need to materialize\n    // all the lazy relationships in the set\n    // (all of the copies have lazy models in their relationships)\n    materializeRelationships(models);\n    \n    models.forEach(function(model) {\n      \n      var shadow = shadows.getModel(model);\n      \n      console.assert(shadow || model.isNew, \"Shadow does not exist for non-new model\");\n      \n      var op = this.getOp(model);\n      op.shadow = shadow;\n      \n      var rels = op.dirtyRelationships;\n      for(var i = 0; i < rels.length; i++) {\n        var d = rels[i];\n        var name = d.name;\n        var parentModel = model[name] || d.oldValue && shadows.getModel(d.oldValue);\n        // embedded children should not be dependencies\n        var isEmbeddedRel = this.embeddedType(model.constructor, name);\n        \n        // TODO: handle hasMany's depending on adapter configuration\n        if(parentModel && !isEmbeddedRel) {\n          var parentOp = this.getOp(parentModel);\n          parentOp.addChild(op);\n        }\n      }\n      \n      var isEmbedded = model.isEmbedded;\n      \n      if(op.isDirty && isEmbedded) {\n        // walk up the embedded tree and mark root as dirty\n        var rootModel = this.findEmbeddedRoot(model, models);\n        var rootOp = this.getOp(rootModel);\n        rootOp.force = true;\n        \n        // ensure the embedded parent is a parent of the operation\n        var parentModel = model._parent;\n        var parentOp = this.getOp(parentModel);\n        \n        // if the child already has some parents, they need to become\n        // the parents of the embedded root as well\n        op.parents.forEach(function(parent) {\n          if(parent === rootOp) return;\n          if(this.findEmbeddedRoot(parent.model, models) === rootModel) return;\n          parent.addChild(rootOp);\n        }, this);\n        \n        parentOp.addChild(op);\n      }\n      \n    }, this);\n  }\n  \n  /**\n    @private\n    Iterate over the models and remove embedded records\n    that are missing their embedded parents.\n  */\n  removeEmbeddedOrphans(models, shadows, session) {\n    var orphans = [];\n    models.forEach(function(model) {\n      if(!model.isEmbedded) return;\n      var root = this.findEmbeddedRoot(model, models);\n      if(!root || root.isEqual(model)) {\n        orphans.push(model);\n      }\n    }, this);\n    models.removeObjects(orphans);\n    shadows.removeObjects(orphans);\n  }\n  \n  findEmbeddedRoot(model, models) {\n    var parent = model;\n    while(parent) {\n      model = parent;\n      parent = model._parent;\n    }\n    // we want the version in the current session\n    return models.getModel(model);\n  }\n  \n  embeddedType(type, name) {\n    return type.fields.get(name).embedded;\n  }\n  \n  /**\n    @private\n    \n    Build the set of dirty models that are part of the flush.\n  */\n  buildDirtySet(models) {\n    var result = new ModelSet();\n    models.forEach(function(model) {\n      var copy = model.copy();\n      copy.errors = null;\n      result.add(copy);\n    }, this);\n    return result;\n  }\n  \n  /**\n    This callback is intendended to resolve the request ordering issue\n    for parent models. For instance, when we have a Post -> Comments\n    relationship, the parent post will be saved first. The request will\n    return and it is likely that the returned JSON will have no comments.\n    \n    In this callback we re-evaluate the relationships after the children\n    have been saved, effectively undoing the erroneous relationship results\n    of the parent request.\n    \n    TODO: this should utilize the \"owner\" of the relationship\n    TODO: move this to OperationGraph\n  */\n  rebuildRelationships(children, parent) {\n    parent.suspendRelationshipObservers(function() {\n      // TODO: figure out a way to preserve ordering (or screw ordering and use sets)\n      for(var i = 0; i < children.length; i++) {\n        var child = children[i];\n        \n        child.eachLoadedRelationship(function(name, relationship) {\n          // TODO: handle hasMany's for non-relational databases...\n          if(relationship.kind === 'belongsTo') {\n            var value =child[name],\n            inverse = child.constructor.inverseFor(name);\n            \n            if(inverse) {\n              if(!(parent instanceof inverse.parentType)) {\n                return;\n              }\n              // if embedded then we are certain the parent has the correct data\n              if(this.embeddedType(inverse.parentType, inverse.name)) {\n                return;\n              }\n              \n              if(inverse.kind === 'hasMany' && parent.isFieldLoaded(inverse.name)) {\n                var parentCollection =parent[inverse.name];\n                if(child.isDeleted) {\n                  parentCollection.removeObject(child);\n                } else if(value && value.isEqual(parent)) {\n                  // TODO: make sure it doesn't already exists (or change model arrays to sets)\n                  // TODO: think about 1-1 relationships\n                  parentCollection.addObject(child);\n                }\n              }\n              \n            }\n          }\n        }, this);\n      }\n    }, this);\n  }\n  \n  perform() {\n    var results = this.results,\n        pending = this.pending,\n        session = this.session;\n    \n    this.ops.forEach(function(op, model) {\n      op.perform();\n      this.trackOperation(op);\n    }, this); \n    \n    return Coalesce.Promise.all(this.pending).then(function() {\n      return results.map(function(model) {\n        return session.merge(model);\n      });\n    }, function(err) {\n      // all the promises that haven't finished, we need still merge them into\n      // the session\n      var failures = pending.map(function(op) {\n        return op.fail();\n      });\n      results = results.concat(failures);\n      throw results.map(function(model) {\n        return session.merge(model);\n      });\n    });\n  }\n  \n  trackOperation(op) {\n    var results = this.results,\n        pending = this.pending;\n    pending.push(op)\n    op.then(function(model) {\n      results.push(model);\n      remove(pending, op);\n      return model;\n    }, function(model) {\n      results.push(model);\n      remove(pending, op);\n      throw model;\n    });\n  }\n  \n  getOp(model) {\n    // ops is is a normal Ember.Map and doesn't use client\n    // ids so we need to make sure that we are looking up\n    // with the correct model instance\n    var models = this.models,\n    materializedModel = models.getModel(model);\n    // TODO: we do this check since it is possible that some\n    // lazy models are not part of `models`, a more robust\n    // solution needs to be figured out for dealing with operations\n    // on lazy models\n    if(materializedModel) model = materializedModel;\n    var op = this.ops.get(model);\n    if(!op) {\n      op = new Operation(this, model, this.shadows.getModel(model));\n      this.ops.set(model, op);\n    }\n    return op;\n  }\n  \n}\n","import ModelSet from '../collections/model_set';\nimport copy from '../utils/copy';\n\n/**\n  Manages updating inverses within a session.\n\n  @class InverseManager\n*/\nexport default class InverseManager {\n  \n  constructor(session) {\n    this.session = session;\n    this.map = {};\n  }\n  \n  register(model) {\n    var session = this.session;\n    \n    model.eachLoadedRelationship(function(name, relationship) {\n      // this is a copy that we mutate\n      var existingInverses = this._inversesFor(model, name),\n          inversesToClear = existingInverses.copy();\n          \n      function checkInverse(inverseModel) {\n        session.reifyClientId(inverseModel);\n        if(existingInverses.contains(inverseModel)) {\n          // nothing to do, already registered\n        } else {\n          this.registerRelationship(model, name, inverseModel);\n        }\n        inversesToClear.remove(inverseModel);\n      }    \n      \n      if(relationship.kind === 'belongsTo') {\n        var inverseModel =model[name];\n        if(inverseModel) {\n          checkInverse.call(this, inverseModel);\n        }\n      } else if(relationship.kind === 'hasMany') {\n        var inverseModels =model[name];\n        inverseModels.forEach(function(inverseModel) {\n          checkInverse.call(this, inverseModel);\n        }, this);\n      }\n      \n      inversesToClear.forEach(function (inverseModel) {\n        this.unregisterRelationship(model, name, inverseModel);\n      }, this);\n    }, this);\n  }\n  \n  unregister(model) {\n    var clientId = model.clientId,\n        inverses = this._inverses(model);\n    for(var name in inverses) {\n      var inverseModels = inverses[name],\n          copiedInverseModels = copy(inverseModels);\n\n      copiedInverseModels.forEach(function (inverseModel) {\n        this.unregisterRelationship(model, name, inverseModel);\n      }, this);\n    }\n    delete this.map[clientId];\n  }\n  \n  registerRelationship(model, name, inverseModel) {\n    var inverse = model.constructor.inverseFor(name);\n    \n    this._inversesFor(model, name).addObject(inverseModel);\n    if(inverse) {\n      this._inversesFor(inverseModel, inverse.name).addObject(model);\n      this._addToInverse(inverseModel, inverse, model);\n    }\n  }\n  \n  unregisterRelationship(model, name, inverseModel) {\n    var inverse =  model.constructor.inverseFor(name);\n    \n    this._inversesFor(model, name).removeObject(inverseModel);\n    if(inverse) {\n      this._inversesFor(inverseModel, inverse.name).removeObject(model);\n      this._removeFromInverse(inverseModel, inverse, model);\n    }\n  }\n\n  _inverses(model) {\n    var clientId = model.clientId,\n        inverses = this.map[clientId];\n\n    if(!inverses) {\n      inverses = this.map[clientId] = {};\n    }\n\n    return inverses;\n  }\n\n  _inversesFor(model, name) {\n    var inverses = this._inverses(model);\n\n    var inversesFor = inverses[name];\n    if(!inversesFor) {\n      inversesFor = inverses[name] = new ModelSet();\n    }\n\n    return inversesFor;\n  }\n\n  _addToInverse(model, inverse, inverseModel) {\n    model = this.session.models.getModel(model);\n    // make sure the inverse is loaded\n    if(!model || !model.isFieldLoaded(inverse.name)) return;\n    model.suspendRelationshipObservers(function() {\n      if(inverse.kind === 'hasMany') {\n        model[inverse.name].addObject(inverseModel)\n      } else if(inverse.kind === 'belongsTo') {\n        model[inverse.name] = inverseModel;\n      }\n    }, this);\n  }\n  \n  _removeFromInverse(model, inverse, inverseModel) {\n    model = this.session.models.getModel(model);\n    // make sure the inverse is loaded\n    if(!model || !model.isFieldLoaded(inverse.name)) return;\n    model.suspendRelationshipObservers(function() {\n      if(inverse.kind === 'hasMany') {\n        model[inverse.name].removeObject(inverseModel)\n      } else if(inverse.kind === 'belongsTo') {\n        model[inverse.name] = null;\n      }\n    }, this);\n  }\n\n}\n","import Coalesce from '../namespace';\n\n/**\n  Maintains a cache of model-related promises\n\n  @class ModelCache\n*/\nexport default class ModelCache {\n\n  constructor() {\n    this._promises = {};\n  }\n\n  add(model, promise=null) {\n    if(this.shouldCache(model)) {\n      if(!promise) {\n        promise = Coalesce.Promise.resolve(model);\n      }\n    }\n    \n    if(promise) {\n      this._promises[model.clientId] = promise;\n    }\n\n    // unlike query cache, we get the \"entry\" from the session directly\n  }\n\n  remove(model) {\n    delete this._promises[model.clientId];\n  }\n\n  getPromise(model) {\n    console.assert(model.clientId, \"Model does not have a client id\");\n\n    var cached = this._promises[model.clientId];\n    if(cached && this.shouldInvalidate(cached)) {\n      this.remove(cached);\n      return;\n    }\n    return cached;\n  }\n  \n  // for now we only add the model if some attributes are loaded,\n  // eventually this will be on a per-attribute basis\n  shouldCache(model) {\n    return model.isPartiallyLoaded;\n  }\n\n  shouldInvalidate(model) {\n    return false;\n  }\n  \n  destroy() {\n    // NOOP: needed for Ember's container\n  }\n  \n  static create(props) {\n    return new this(props);\n  }\n\n\n}\n","import Coalesce from '../namespace';\nimport array_from from '../utils/array_from';\n\n/**\n@private\nAn operation that is part of a flush\n\n@namespace rest\n@class Operation\n*/\nexport default class Operation {\n  constructor(flush, model, shadow) {\n    this.model = model;\n    this.shadow = shadow;\n    this.flush = flush;\n    this.adapter = this.flush.session.context.configFor(model).get('adapter');\n    this.session = this.flush.session;\n    // forces the operation to be performed\n    this.force = false\n    this.children = new Set();\n    this.parents = new Set();\n    this.promise = new Coalesce.Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n  \n  get diff() {\n    return this.model.diff(this.shadow);\n  }\n  \n  then(...args) {\n    var promise = this.promise;\n    return promise.then.apply(promise, args);\n  }\n  \n  addChild(child) {\n    this.children.add(child);\n    child.parents.add(this);\n  }\n  \n  // determine which relationships are affected by this operation\n  // TODO: we should unify this with dirty checking\n  get dirtyRelationships() {\n    var adapter = this.adapter,\n    model = this.model,\n    rels = [],\n    shadow = this.shadow;\n    \n    if(model.isNew) {\n      // if the model is new, all relationships are considered dirty\n      model.eachRelationship(function(name, relationship) {\n        if(adapter.isRelationshipOwner(relationship)) {\n          rels.push({name: name, type: relationship.kind, relationship: relationship, oldValue: null});\n        }\n      }, this);\n    } else {\n      // otherwise we check the diff to see if the relationship has changed,\n      // in the case of a delete this won't really matter since it will\n      // definitely be dirty\n      var diff = this.diff;\n      for(var i = 0; i < diff.length; i++) {\n        var d = diff[i];\n        if(d.relationship && adapter.isRelationshipOwner(d.relationship)) {\n          rels.push(d);\n        }\n      }\n    }\n    \n    return rels;\n  }\n  \n  get isDirty() {\n    return !!this.dirtyType;\n  }\n  \n  get isDirtyFromUpdates() {\n    var model = this.model,\n    shadow = this.shadow,\n    adapter = this.adapter;\n    \n    // this case could happen via a dirty relationship where the other side does\n    // not have an inverse (in which case the model will not be dirty and hence no shadow)\n    if(!shadow) return false;\n    \n    var diff = this.diff;\n    var dirty = false;\n    var relDiff = [];\n    for(var i = 0; i < diff.length; i++) {\n      var d = diff[i];\n      if(d.type == 'attr') {\n        dirty = true;\n      } else {\n        relDiff.push(d);\n      }\n    }\n    return dirty || adapter.isDirtyFromRelationships(model, shadow, relDiff);\n  }\n  \n  get dirtyType() {\n    var model = this.model;\n    if(model.isNew) {\n      return \"created\";\n    } else if(model.isDeleted) {\n      return \"deleted\";\n    } else if(this.isDirtyFromUpdates || this.force) {\n      return \"updated\";\n    }\n  }\n  \n  perform() {\n    var promise,\n        adapter = this.adapter,\n        flush = this.flush;\n    \n    // perform after all parents have performed\n    if(this.parents.size > 0) {\n      promise = Coalesce.Promise.all(array_from(this.parents)).then( () => {\n        return this._perform();\n      });\n    } else {\n      promise = this._perform();\n    }\n    \n    if(this.children.size > 0) {\n      promise = promise.then((model) => {\n        return Coalesce.Promise.all(array_from(this.children)).then(function(models) {\n          flush.rebuildRelationships(models, model);\n          return model;\n        }, function(models) {\n          // XXX: should we still rebuild relationships since this request succeeded?\n          throw model;\n        });\n      });\n    }\n    \n    return promise;\n  }\n  \n  _perform() {\n    var flush = this.flush,\n        adapter = this.adapter,\n        session = this.session,\n        dirtyType = this.dirtyType,\n        model = this.model,\n        shadow = this.shadow,\n        promise;\n    \n    if(!dirtyType || !adapter.shouldSave(model)) {\n      if(model.isEmbedded) {\n        // if embedded we want to extract the model from the result\n        // of the parent operation\n        promise = this._promiseFromEmbeddedParent();\n      } else {\n        // return an \"identity\" promise if we don't want to do anything\n        promise = Coalesce.Promise.resolve();\n      }\n    } else if(dirtyType === \"created\") {\n      promise = adapter._contextualizePromise(adapter._create(model), model);\n    } else if(dirtyType === \"updated\") {\n      promise = adapter._contextualizePromise(adapter._update(model), model);\n    } else if(dirtyType === \"deleted\") {\n      promise = adapter._contextualizePromise(adapter._deleteModel(model), model);\n    }\n    \n    promise = promise.then(function(serverModel) {\n      // in the case of new records we need to assign the id\n      // of the model so dependent operations can use it\n      // serverModel could be null (e.g. an embedded record removed from its parent)\n      if(serverModel && !model.id) {\n        model.id = serverModel.id;\n      }\n      if(!serverModel) {\n        // if no data returned, assume that the server data\n        // is the same as the model\n        serverModel = model;\n      } else {\n        if(serverModel.meta && Object.keys(serverModel).length == 1 ){\n          model.meta = serverModel.meta;\n          serverModel = model;\n        }\n        if(!serverModel.clientRev) {\n          // ensure the clientRev is set on the returned model\n          // 0 is the default value\n          serverModel.clientRev = model.clientRev;\n        }\n      }\n      return serverModel;\n    }, function(serverModel) {\n      // if the adapter returns errors we replace the\n      // model with the shadow if no other model returned\n      // TODO: could be more intuitive to move this logic\n      // into adapter._contextualizePromise\n      \n      // there won't be a shadow if the model is new\n      if(shadow && serverModel === model) {\n        shadow.errors = serverModel.errors;\n        throw shadow;\n      }\n      throw serverModel;\n    });\n    this.resolve(promise);\n    return this;\n  }\n  \n  // Fail this operation. This is called externally when this operation's\n  // dependencies fail\n  fail() {\n    var errors = this.adapter.serializerFactory.serializerFor('errors');\n    // TODO: for now just set a status code, need to think through differentiating\n    // types of errors, especially ones that are not field-specific\n    errors.status = 0;\n    this.model.errors = errors;\n    return this.model;\n  }\n  \n  get _embeddedParent() {\n    var model = this.model,\n        parentModel = model._parent,\n        flush = this.flush;\n    \n    console.assert(parentModel, \"Embedded parent does not exist!\");\n    \n    return flush.getOp(parentModel);\n  }\n  \n  _promiseFromEmbeddedParent() {\n    var model = this.model,\n    adapter = this.adapter;\n    \n    function findInParent(parentModel) {\n      var res = null;\n      parentModel.eachRelatedModel(function(child, embeddedType) {\n        if(res) return;\n        if(child.isEqual(model)) res = child;\n      });\n      return res;\n    }\n    \n    return this._embeddedParent.then(function(parent) {\n      return findInParent(parent);\n    }, function(parent) {\n      throw findInParent(parent);\n    });\n  }\n  \n}\n","import ObservableArray  from '../collections/observable_array'\n\nexport default class Query extends ObservableArray {\n  \n  constructor(session, type, params) {\n    super();\n    this.session = session;\n    this._type = type;\n    this._params = params;\n  }\n  \n  get params() {\n    return this._params;\n  }\n  \n  get type() {\n    return this._type;\n  }\n  \n  invalidate() {\n    return this.session.invalidateQuery(this);\n  }\n  \n  refresh() {\n    return this.session.refreshQuery(this);\n  }\n  \n}\n","import Coalesce from '../namespace';\n\n/**\n  Maintains a cache of query-related promises\n\n  @class QueryCache\n*/\nexport default class QueryCache {\n\n  constructor() {\n    this._queries = {};\n    this._promises = {};\n  }\n\n  add(query, promise=null) {\n    var key = this.keyFor(query.type, query.params);\n    \n    if(promise && this.shouldCache(query)) {\n      this._promises[key] = promise;\n    }\n    \n    this._queries[key] = query;\n  }\n  \n  remove(query) {\n    var key = this.keyFor(query.type, query.params);\n    delete this._queries[key];\n    delete this._promises[key];\n  }\n  \n  removeAll(type) {\n    var queries = this._queries;\n    for(var key in queries) {\n      if(!queries.hasOwnProperty(key)) continue;\n      var typeKey = key.split('$')[0];\n      if(type.typeKey === typeKey) {\n        this.remove(queries[key]);\n      }\n    }\n  }\n  \n  getQuery(type, params) {\n    var key = this.keyFor(type, params);\n    return this._queries[key];\n  }\n  \n  getPromise(query) {\n    var key = this.keyFor(query.type, query.params),\n        cached =  this._promises[key];\n    if(cached && this.shouldInvalidate(cached)) {\n      this.remove(cached);\n      return;\n    }\n    return cached;\n  }\n  \n  keyFor(type, params) {\n    return type.typeKey + '$' + JSON.stringify(params);\n  }\n  \n  shouldCache(query) {\n    return true;\n  }\n\n  shouldInvalidate(query) {\n    return false;\n  }\n  \n  destroy() {\n    // NOOP: needed for Ember's container\n  }\n  \n  static create(props) {\n    return new this(props);\n  }\n\n\n}\n","import ModelArray  from '../collections/model_array';\nimport ModelSet  from '../collections/model_set';\nimport Error  from '../error';\nimport Model  from '../model/model';\nimport array_from  from '../utils/array_from';\nimport copy  from '../utils/copy';\nimport evented  from '../utils/evented';\nimport CollectionManager  from './collection_manager';\nimport Flush  from './flush';\nimport InverseManager  from './inverse_manager';\nimport Query  from './query';\n\nvar uuid = 1;\n\nexport default class Session {\n\n  constructor({context, idManager, parent}) {\n    this.context = context;\n    this.idManager = idManager;\n    this.parent = parent;\n    this.models = new ModelSet();\n    this.collectionManager = new CollectionManager();\n    this.inverseManager = new InverseManager(this);\n    this.shadows = new ModelSet();\n    this.originals = new ModelSet();\n    this.newModels = new ModelSet();\n    this._dirtyCheckingSuspended = false;\n    this.name = \"session\" + uuid++;\n  }\n\n  /**\n    Instantiates a model but does *not* add it to the session. This is equivalent\n    to calling `create` on the model's class itself.\n    \n    @method create\n    @param {String} type the typeKey of the model\n    @param {Object} hash the initial attributes of the model\n    @return {Model} the instantiated model\n  */\n  build(type, hash) {\n    type = this._typeFor(type);\n    var model = type.create(hash || {});\n    return model;\n  }\n\n  /**\n    Creates a model within the session.\n    \n    @method create\n    @param {String} type the typeKey of the model\n    @param {Object} hash the initial attributes of the model\n    @return {Model} the created model\n  */\n  create(type, hash) {\n    var model = this.build(type, hash);\n    return this.add(model);\n  }\n\n  adopt(model) {\n    this.reifyClientId(model);\n    console.assert(!model.session || model.session === this, \"Models instances cannot be moved between sessions. Use `add` or `update` instead.\");\n    console.assert(!this.models.getModel(model) || this.models.getModel(model) === model, \"An equivalent model already exists in the session!\");\n\n    if(model.isNew) {\n      this.newModels.add(model);\n    }\n    // Only loaded models are stored on the session\n    if(!model.session) {\n      this.models.add(model);\n      // Need to register with the inverse manager before being added to the\n      // session. Otherwise, in a child session, the entire graph will be\n      // materialized.\n      this.inverseManager.register(model);\n      model.session = this;\n    }\n    return model;\n  }\n\n  /**\n    Adds a model to this session. Some cases below:\n\n    If the model is detached (meaning not currently associated with a session),\n    then the model will be re-used in this session. The entire graph of detached\n    objects will be traversed and added to the session.\n\n    If the model is already associated with this session in *loaded form* (not necessarily\n    the same instance that is passed in), this method is a NO-OP.\n\n    If the model is already associated with a *different* session then the model\n    will be copied to this session. In order to prevent large graphs from being\n    copied, all relations will be copied in lazily.\n\n    TODO: when adding *non-new* models we should think through the semantics.\n    For now we assume this only works with new models or models from a parent session.\n\n    @method add\n    @param {Coalesce.Model} model The model to add to the session\n  */\n  add(model) {\n    this.reifyClientId(model);\n\n    var dest = this.getModel(model);\n    if(dest) return dest;\n    \n    if(model.session === this) return model;\n\n    // If new and detached we can re-use. If the model is\n    // detached but *not* new we have undefined semantics\n    // so for the time being we just create a lazy copy.\n    if(model.isNew && model.isDetached) {\n      dest = model;\n    } else if(model.isNew) {\n      dest = model.copy();\n      // TODO: we need to recurse here for new children, otherwise\n      // they will become lazy\n    } else {\n      // TODO: model copy creates lazy copies for the\n      // relationships. How do we update the inverse here?\n      dest = model.lazyCopy();\n    }\n    return this.adopt(dest);\n  }\n\n  /**\n    Removes the model from the session.\n\n    This does not mean that the model has been necessarily deleted,\n    just that the session should no longer keep track of it.\n\n    @method remove\n    @param {Coalesce.Model} model The model to remove from the session\n  */\n  remove(model) {\n    // TODO: think through relationships that still reference the model\n    this.models.remove(model);\n    this.shadows.remove(model);\n    this.originals.remove(model);\n  }\n\n  /**\n    Updates a model in this session using the passed in model as a reference.\n\n    If the passed in model is not already associated with this session, this\n    is equivalent to adding the model to the session.\n\n    If the model already is associated with this session, then the existing\n    model will be updated.\n\n    @method update\n    @param {Coalesce.Model} model A model containing updated properties\n  */\n  update(model) {\n    this.reifyClientId(model);\n    var dest = this.getModel(model);\n\n    if(model.isNew && !dest) {\n      dest = model.constructor.create();\n      // need to set the clientId for adoption\n      dest.clientId = model.clientId;\n      this.adopt(dest);\n    }\n\n    // if the model is detached or does not exist\n    // in the target session, updating is semantically\n    // equivalent to adding\n    if(model.isDetached || !dest) {\n      return this.add(model);\n    }\n\n    // handle deletion\n    if(model.isDeleted) {\n      // no-op if already deleted\n      if(!dest.isDeleted) {\n        this.deleteModel(dest);\n      }\n      return dest;\n    }\n\n    model.copyAttributes(dest);\n    model.copyMeta(dest);\n\n    model.eachLoadedRelationship(function(name, relationship) {\n      if(relationship.kind === 'belongsTo') {\n        var child = model[name]\n        if(child) {\n          dest[name] = child;\n        }\n      } else if(relationship.kind === 'hasMany') {\n        var children = model[name];\n        var destChildren = dest[name];\n        children.copyTo(destChildren);\n      }\n    }, this);\n\n    return dest;\n  }\n\n  deleteModel(model) {\n    // if the model is new, deleting should essentially just\n    // remove the object from the session\n    if(model.isNew) {\n      var newModels = this.newModels;\n      newModels.remove(model);\n    } else {\n      this.modelWillBecomeDirty(model);\n    }\n    model.isDeleted = true;\n    this.collectionManager.modelWasDeleted(model);\n    this.inverseManager.unregister(model);\n  }\n\n  /**\n    Returns the model corresponding to the given typeKey and id\n    or instantiates a new model if one does not exist.\n\n    @returns {Model}\n  */\n  fetch(type, id) {\n    type = this._typeFor(type);\n    var typeKey = type.typeKey;\n    // Always coerce to string\n    id = id+'';\n\n    var model = this.getForId(typeKey, id);\n    if(!model) {\n      model = this.build(typeKey, {id: id});\n      this.adopt(model);\n    }\n\n    return model;\n  }\n\n  /**\n    Loads the model corresponding to the given typeKey and id.\n\n    @returns {Promise}\n  */\n  load(type, id, opts) {\n    var model = this.fetch(type, id);\n    return this.loadModel(model, opts);\n  }\n\n  /**\n    Ensures data is loaded for a model.\n\n    @returns {Promise}\n  */\n  loadModel(model, opts) {\n    console.assert(model.id, \"Cannot load a model with an id\");\n    // TODO: this should be done on a per-attribute bases\n    var cache = this._modelCacheFor(model),\n        promise = cache.getPromise(model),\n        adapter = this._adapterFor(model);\n\n    if(promise) {\n      // the cache's promise is not guaranteed to return anything\n      promise = promise.then(function() {\n        return model;\n      });\n    } else {\n      promise = adapter.load(model, opts, this);\n      cache.add(model, promise);\n    }\n\n    return promise;\n  }\n  \n  /**\n    Similar to `loadModel`, but guarntees a trip to the server and skips the\n    session level model cache.\n    \n    @params {Model} model the model to refresh\n    @return {Promise}\n  */\n  refresh(model, opts) {\n    var session = this,\n        adapter = this._adapterFor(model);\n    return adapter.load(model, opts, this);\n  }\n\n  /**\n    @deprecated\n    \n    Delegates to either `query` or `load` based on the parameter types\n    \n    @returns {Promise}\n  */\n  find(type, query, opts) {\n    if (typeof query === 'object') {\n      return this.query(type, query, opts);\n    }\n    return this.load(type, query, opts);\n  }\n  \n  /**\n    @private\n    \n    Build a query instance\n  */\n  buildQuery(type, params) {\n    type = this._typeFor(type);\n    return new Query(this, type, params);\n  }\n  \n  /**\n    Similar to `fetch`, this method returns a cached local result of the query\n    without a trip to the server.\n    \n    @param {Type} type the type to query against\n    @param {object} params the query parameters\n    @return {Query}\n  */\n  fetchQuery(type, params) {\n    type = this._typeFor(type);\n    var queryCache = this._queryCacheFor(type),\n        query = queryCache.getQuery(type, params);\n    \n    if(!query) {\n      query = this.buildQuery(type, params);\n      queryCache.add(query);\n    }\n    \n    return query;\n  }\n\n  /**\n    Queries the server.\n    \n    @param {Type} type Type to query against\n    @param {object} params Query parameters\n    @param {object} opts Additional options\n    @return {Promise}\n  */\n  query(type, params, opts) {\n    var type = this._typeFor(type),\n        query = this.fetchQuery(type, params),\n        queryCache = this._queryCacheFor(type),\n        promise = queryCache.getPromise(query);\n        \n    if(!promise) {\n      promise = this.refreshQuery(query, opts);\n    }\n    \n    return promise;\n  }\n  \n  /**\n    Queries the server and bypasses the cache.\n    \n    @param {Type} type Type to query against\n    @param {object} params Query parameters\n    @param {object} opts Additional options\n    @return {Promise}\n  */\n  refreshQuery(query, opts) {\n    // TODO: for now we populate the query in the session, eventually this\n    // should be done in the adapter layer a la models\n    var adapter = this._adapterFor(query.type),\n      promise = adapter.query(query.type.typeKey, query.params, opts, this).then(function(models) {\n      query.meta = models.meta;\n      query.replace(0, query.length, models);\n      return query;\n    });\n    var queryCache = this._queryCacheFor(query.type);\n    queryCache.add(query, promise);\n    \n    return promise;\n  }\n\n  /**\n    Sends all local changes down to the server\n    \n    @return {Promise}\n  */\n  flush() {\n    var session = this,\n        dirtyModels = this.dirtyModels,\n        newModels = this.newModels,\n        shadows = this.shadows;\n    \n    this.emit('willFlush', dirtyModels);\n    \n    var flush = new Flush(this, dirtyModels),\n        promise = flush.perform();\n\n    // Optimistically assume updates will be\n    // successful. Copy shadow models into\n    // originals and remove the shadow.\n    dirtyModels.forEach(function(model) {\n      // track original to merge against new data that\n      // hasn't seen client updates\n      var original = this.originals.getModel(model);\n      var shadow = this.shadows.getModel(model);\n      if(shadow && (!original || original.rev < shadow.rev)) {\n        this.originals.add(shadow);\n      }\n      this.markClean(model);\n    }, this);\n    newModels.clear();\n\n    return promise;\n  }\n\n  getModel(model) {\n    var res = this.models.getModel(model);\n    if(!res && this.parent) {\n      res = this.parent.getModel(model);\n      if(res) {\n        res = res.fork(this);\n        // TODO: is there a better place for this?\n        this.updateCache(res);\n      }\n    }\n    return res;\n  }\n\n  getForId(typeKey, id) {\n    var clientId = this.idManager.getClientId(typeKey, id);\n    return this.getForClientId(clientId);\n  }\n\n  getForClientId(clientId) {\n    var res = this.models.getForClientId(clientId);\n    if(!res && this.parent) {\n      res = this.parent.getForClientId(clientId);\n      if(res) {\n        res = this.adopt(res.copy());\n        // TODO: is there a better place for this?\n        this.updateCache(res);\n      }\n    }\n    return res;\n  }\n\n  reifyClientId(model) {\n    this.idManager.reifyClientId(model);\n  }\n\n  remoteCall(context, name, params, opts) {\n    var session = this,\n        adapter = this._adapterFor(context)\n\n    if(opts && opts.deserializationContext && typeof opts.deserializationContext !== 'string') {\n      opts.deserializationContext = opts.deserializationContext.typeKey;\n    }\n\n    return adapter.remoteCall(context, name, params, opts, this);\n  }\n\n  modelWillBecomeDirty(model) {\n    if(this._dirtyCheckingSuspended) {\n      return;\n    }\n    // Embedded models dirty their parents as well\n    if(model._parent) {\n      this.modelWillBecomeDirty(model._parent);\n    }\n    this.touch(model);\n  }\n\n  get dirtyModels() {\n    var models = new ModelSet(array_from(this.shadows).map(function(model) {\n      return this.models.getModel(model);\n    }, this));\n\n    this.newModels.forEach(function(model) {\n      models.add(model);\n    });\n\n    return models;\n  }\n\n  suspendDirtyChecking(callback, binding) {\n    var self = this;\n\n    // could be nested\n    if(this._dirtyCheckingSuspended) {\n      return callback.call(binding || self);\n    }\n\n    try {\n      this._dirtyCheckingSuspended = true;\n      return callback.call(binding || self);\n    } finally {\n      this._dirtyCheckingSuspended = false;\n    }\n  }\n\n  newSession() {\n    var child = this.constructor.create({\n      parent: this,\n      context: this.context,\n      idManager: this.idManager\n    });\n    return child;\n  }\n\n  getShadow(model) {\n    var shadows = this.shadows;\n    var models = this.models;\n    // shadows are only created when the model is dirtied,\n    // if no model exists in the `shadows` property then\n    // it is safe to assume the model has not been modified\n    return shadows.getModel(model) || models.getModel(model);\n  }\n\n  /**\n    @private\n\n    Updates the promise cache\n  */\n  updateCache(model) {\n    var cache = this._modelCacheFor(model);\n    cache.add(model);\n  }\n\n  /**\n    Invalidate the cache for a particular model. This has the\n    effect of making the next `load` call hit the server.\n\n    @method invalidate\n    @param {Model} model\n  */\n  invalidate(model) {\n    var cache = this._modelCacheFor(model);\n    cache.remove(model);\n  }\n  \n  /**\n    Invalidate the cache for a particular query.\n\n    @method invalidateQuery\n    @param {Query} query\n  */\n  invalidateQuery(query) {\n    var queryCache = this._queryCacheFor(query.type);\n    queryCache.remove(query);\n  }\n  \n  /**\n    Invalidate the cache for all queries corresponding to a particular Type.\n\n    @method invalidateQueries\n    @param {Type} type Type to invalidate\n  */\n  invalidateQueries(type) {\n    var type = this._typeFor(type),\n        queryCache = this._queryCacheFor(type);\n    queryCache.removeAll(type);\n  }\n\n  /**\n    Mark a model as clean. This will prevent future\n    `flush` calls from persisting this model's state to\n    the server until the model is marked dirty again.\n\n    @method markClean\n    @param {Coalesce.Model} model\n  */\n  markClean(model) {\n    // as an optimization, model's without shadows\n    // are assumed to be clean\n    this.shadows.remove(model);\n  }\n\n  /**\n    Mark a model as dirty. This will cause this model\n    to be sent to the adapter during a flush.\n\n    @method touch\n    @param {Coalesce.Model} model\n  */\n  touch(model) {\n    if(!model.isNew) {\n      var shadow = this.shadows.getModel(model);\n      if(!shadow) {\n        this.shadows.addObject(model.copy())\n      }\n    }\n    model.bump();\n  }\n\n\n  /**\n    Whether or not the session is dirty.\n\n    @property isDirty\n  */\n  get isDirty() {\n    return this.dirtyModels.size > 0;\n  }\n\n\n  /**\n    Merge in raw serialized data into this session\n    for the corresponding type.\n\n    @method mergeData\n    @param {Object} data the raw unserialized data\n    @param String [typeKey] the name of the type that the data corresponds to\n    @returns {any} the deserialized models that were merged in\n  */\n  mergeData(data, typeKey) {\n    return this._adapterFor(typeKey).mergeData(data, typeKey, this);\n  }\n\n  /**\n    Update the parent session with all changes local\n    to this child session.\n\n    @method updateParent\n  */\n  updateParent() {\n    if(!this.parent) {\n      throw new Error(\"Session does not have a parent\");\n    }\n    // flush all local updates to the parent session\n    var dirty = this.dirtyModels,\n        parent = this.parent;\n    \n    dirty.forEach(function(model) {\n      // XXX: we want to do this, but we need to think about\n      // revision numbers. The parent's clientRev needs to tbe\n      // the childs normal rev.\n\n      // \"rebase\" against parent version\n      // var parentModel = parent.getModel(model);\n      // if(parentModel) {\n      //   this.merge(parentModel);\n      // }\n      \n      // update the values of a corresponding model in the parent session\n      // if a corresponding model doesn't exist, its added to the parent session\n      parent.update(model); \n    }, this);\n  }\n\n  /**\n    Similar to `flush()` with the additional effect that the models will\n    be immediately updated in the parent session. This is useful when\n    you want to optimistically assume success.\n\n    @method flushIntoParent\n  */\n  flushIntoParent() {\n    if(!this.parent) {\n      throw new Error(\"Session does not have a parent\");\n    }\n    this.updateParent();\n    return this.flush();\n  }\n  \n  /**\n    Merges new data for a model into this session.\n\n    If the corresponding model inside the session is \"dirty\"\n    and has not been successfully flushed, the local changes\n    will be merged against these changes.\n\n    By default, if no server versioning information is specified,\n    this data is assumed to be more current than what is in\n    the session. If no client versioning information is specified,\n    this data is assumed to have not seen the latest client changes.\n\n    @method merge\n    @param {Coalesce.Model} model The model to merge\n    @param {Set} [visited] Cache used to break recursion. This is required for non-version-aware backends.\n  */\n  merge(model, visited) {\n    console.assert(model.isModel, `${model} is not a model`);\n    if(this.parent) {\n      model = this.parent.merge(model, visited);\n    }\n\n    this.reifyClientId(model);\n\n    if(!visited) visited = new Set();\n\n    if(visited.has(model)) {\n      return this.getModel(model);\n    }\n    visited.add(model);\n\n    this.emit('willMerge', model);\n\n    this.updateCache(model);\n\n    var detachedChildren = [];\n    // Since we re-use objects during merge if they are detached,\n    // we need to precompute all detached children\n    model.eachChild(function(child) {\n      if(child.isDetached) {\n        detachedChildren.push(child);\n      }\n    }, this);\n\n    var merged;\n\n    if(model.hasErrors) {\n      merged = this._mergeError(model);\n    } else {\n      merged = this._mergeSuccess(model);\n    }\n\n    if(model.meta){\n      merged.meta = model.meta;\n    }\n    \n    for(var i = 0; i < detachedChildren.length; i++) {\n      var child = detachedChildren[i];\n      this.merge(child, visited);\n    }\n\n    this.emit('didMerge', model);\n    return merged;\n  }\n\n  mergeModels(models) {\n    var merged = new ModelArray();\n    merged.session = this;\n    merged.addObjects(models);\n    merged.meta = models.meta;\n    var session = this;\n    models.forEach(function(model) {\n      merged.pushObject(session.merge(model));\n    });\n    return merged;\n  }\n\n  _mergeSuccess(model) {\n    var models = this.models,\n        shadows = this.shadows,\n        newModels = this.newModels,\n        originals = this.originals,\n        merged,\n        ancestor,\n        existing = models.getModel(model),\n        shadow = shadows.getModel(model);\n\n    if(existing && this._containsRev(existing, model)) {\n      return existing;\n    }\n\n    var hasClientChanges = !shadow || this._containsClientRev(model, shadow);\n\n    if(hasClientChanges) {\n      // If has latest client rev, merge against the shadow\n      ancestor = shadow;\n    } else {\n      // If doesn't have the latest client rev, merge against original\n      ancestor = originals.getModel(model);\n    }\n\n    this.suspendDirtyChecking(function() {\n      merged = this._mergeModel(existing, ancestor, model);\n    }, this);\n\n    if(hasClientChanges) {\n      // after merging, if the record is deleted, we remove\n      // it entirely from the session\n      if(merged.isDeleted) {\n        this.remove(merged);\n      } else {\n        // After a successful merge we update the shadow to the\n        // last known value from the server. As an optimization,\n        // we only create shadows if the model has been dirtied.\n        if(shadows.contains(model)) {\n          // TODO: should remove unless client has unflushed changes\n          shadows.addData(model);\n        }\n\n        // Once the server has seen our local changes, the original\n        // is no longer needed\n        originals.remove(model);\n\n        if(!merged.isNew) {\n          newModels.remove(merged);\n        }\n      }\n    } else {\n      // TODO: what should we do with the shadow if the merging ancestor\n      // is the original? In order to update, it would require knowledge\n      // of how the server handles merging (if at all)\n    }\n    \n    // clear the errors on the merged model\n    // TODO: we need to do a proper merge here\n    merged.errors = null;\n    \n    return merged;\n  }\n\n  _mergeError(model) {\n    var models = this.models,\n        shadows = this.shadows,\n        newModels = this.newModels,\n        originals = this.originals,\n        merged,\n        ancestor,\n        existing = models.getModel(model),\n        // If a shadow does not exist this could be an error during\n        // a create operation. In this case, if the server has seen\n        // the client's changes we should merge using the new model\n        // as the ancestor. This case could happen if the server manipulates\n        // the response to return valid values without saving.\n        shadow = shadows.getModel(model) || existing;\n        \n    if(!existing) {\n      // This case could happen on error during create inside child session\n      return model;\n    }\n    \n    var original = originals.getModel(model);\n\n    var hasClientChanges = this._containsClientRev(model, shadow);\n    if(hasClientChanges) {\n      // If has latest client rev, merge against the shadow.\n      ancestor = shadow;\n    } else {\n      // If doesn't have the latest client rev, merge against original\n      ancestor = original;\n    }\n\n    // TODO: load errors are merged here, harmless since no loaded data, but\n    // need to rethink\n    // only merge if we haven't already seen this version\n    if(ancestor && !this._containsRev(existing, model)) {\n      this.suspendDirtyChecking(function() {\n        merged = this._mergeModel(existing, ancestor, model);\n      }, this);\n    } else {\n      merged = existing;\n    }\n\n    // set the errors on the merged model\n    // TODO: we need to do a proper merge here\n    merged.errors = copy(model.errors);\n \n    if(!model.isNew && original) {\n      // \"rollback\" shadow to the original\n      shadows.addData(original);\n      // add any new loaded data from the server\n      // TODO: rethink case above here where \"the server returns valid values without saving\"\n      // we should not update the model in this case\n      shadows.addData(model);\n\n      // the shadow is now the server version, so no reason to\n      // keep the original around\n      originals.remove(model);\n    } else if(model.isNew) {\n      // re-track the model as a new model\n      newModels.add(existing);\n    }\n\n    return merged;\n  }\n\n  _mergeModel(dest, ancestor, model) {\n    // if the model does not exist, no \"merging\"\n    // is required\n    if(!dest) {\n      if(model.isDetached) {\n        dest = model;\n      } else {\n        dest = model.copy();\n      }\n\n      this.adopt(dest);\n      return dest;\n    }\n\n    // set id for new records\n    dest.id = model.id;\n    dest.clientId = model.clientId;\n    // copy the server revision\n    dest.rev = model.rev;\n    \n    // TODO: move merging isDeleted into merge strategy\n    // dest.isDeleted = model.isDeleted;\n\n    //XXX: why do we need this? at this point shouldn't the dest always be in\n    // the session?\n    this.adopt(dest);\n\n    // as an optimization we might not have created a shadow\n    if(!ancestor) {\n      ancestor = dest;\n    }\n    \n    // Reify child client ids before merging. This isn't semantically\n    // required, but many data structures that might be used in the merging\n    // process use client ids.\n    model.eachChild(function(child) {\n      this.reifyClientId(child);\n    }, this);\n\n    var strategy = this._mergeStrategyFor(model.typeKey);\n    strategy.merge(dest, ancestor, model);\n\n    return dest;\n  }\n\n  _containsRev(modelA, modelB) {\n    if(!modelA.rev) return false;\n    if(!modelB.rev) return false;\n    return modelA.rev >= modelB.rev;\n  }\n\n  _containsClientRev(modelA, modelB) {\n    return modelA.clientRev >= modelB.clientRev;\n  }\n  \n  _typeFor(key) {\n    return this.context.typeFor(key);\n  }\n  \n  _adapterFor(key) {\n    return this.context.configFor(key).get('adapter');\n  }\n  \n  _modelCacheFor(key) {\n    return this.context.configFor(key).get('modelCache');\n  }\n  \n  _queryCacheFor(key) {\n    return this.context.configFor(key).get('queryCache');\n  }\n  \n  _mergeStrategyFor(key) {\n    return this.context.configFor(key).get('mergeStrategy');\n  }\n\n  toString() {\n    var res = this.name;\n    if(this.parent) {\n      res += \"(child of \" + this.parent.toString() + \")\";\n    }\n    return res;\n  }\n  \n  destroy() {\n    // NOOP: needed for Ember's container\n  }\n  \n  static create(props) {\n    return new this(props);\n  }\n\n}\n\nevented(Session.prototype);\n","\n// When using firefox, we cannot use Array.from since it apparently does not\n// support custom iterables\n// XXX: always use forEach until we get to the bottom of firefox issues\nvar USE_NATIVE = false; // typeof Set.prototype[Symbol.iterator] !== 'undefined';\n\nexport default function from_array(iterable) {\n  \n  if(USE_NATIVE || Array.isArray(iterable)) {\n    return Array.from.apply(this, arguments);\n  }\n  \n  var res = [];\n  iterable.forEach(function(value) {\n    res.push(value);\n  });\n  return res;\n  \n}\n","/**\n  @private\n\n  All classes extend this class. Provides additonal object model helper\n  methods.\n\n  @namespace utils\n  @class Base\n*/\nexport default class Base {\n  // Legacy Ember.js Object Model methods\n  static create(props) {\n    return new this(props);\n  }\n\n  static reopen(props) {\n    for(var key in props) { \n      if(!props.hasOwnProperty(key)) return;\n      this.prototype[key] = props[key];\n    }\n    return this;\n  }\n\n  static extend(props) {\n    var klass = class extends this {};\n    klass.reopen(props);\n    return klass;\n  }\n\n  static reopenClass(props) {\n    for(var key in props) {\n      if(!props.hasOwnProperty(key)) return;\n      this[key] = props[key];\n    }\n    return this;\n  }\n  \n  destroy() {\n    // NOOP: Needed for Ember's container\n  }\n}\n","function _copy(obj, deep, seen, copies) {\n  var ret, loc, key;\n\n  // primitive data types are immutable, just return them.\n  if ('object' !== typeof obj || obj===null) return obj;\n  if (obj.copy && typeof obj.copy === 'function') return obj.copy(deep);\n\n  // avoid cyclical loops\n  if (deep && (loc=seen.indexOf(obj))>=0) return copies[loc];\n\n  if (obj instanceof Array) {\n    ret = obj.slice();\n    if (deep) {\n      loc = ret.length;\n      while(--loc>=0) ret[loc] = _copy(ret[loc], deep, seen, copies);\n    }\n  } else if (obj instanceof Date) {\n    ret = new Date(obj.getTime());\n  } else {\n    ret = {};\n    for(key in obj) {\n      if (!obj.hasOwnProperty(key)) continue;\n\n      // Prevents browsers that don't respect non-enumerability from\n      // copying internal Ember properties\n      if (key.substring(0,2) === '__') continue;\n\n      ret[key] = deep ? _copy(obj[key], deep, seen, copies) : obj[key];\n    }\n  }\n\n  if (deep) {\n    seen.push(obj);\n    copies.push(ret);\n  }\n\n  return ret;\n}\n\n/**\n  Creates a clone of the passed object. This function can take just about\n  any type of object and create a clone of it, including primitive values\n  (which are not actually cloned because they are immutable).\n\n  If the passed object implements the `clone()` method, then this function\n  will simply call that method and return the result.\n\n  @method copy\n  @param {Object} obj The object to clone\n  @param {Boolean} deep If true, a deep copy of the object is made\n  @return {Object} The cloned object\n*/\nexport default function copy(obj, deep) {\n  return _copy(obj, deep, deep ? [] : null, deep ? [] : null);\n}\n","\n// dead simple event implementation based on https://github.com/allouis/minivents/blob/master/minivents.js\n\nexport default function (target) {\n  var events = {};\n  target = target || this;\n  /**\n   *  On: listen to events\n   */\n  target.on = function(type, func, ctx){\n    events[type] = events[type] || []\n    events[type].push({f:func, c:ctx})\n  }\n  /**\n   *  Off: stop listening to event / specific callback\n   */\n  target.off = function(type, func){\n    type || (events = {})\n    var list = events[type] || [],\n    i = list.length = func ? list.length : 0\n    while(i-->0) func == list[i].f && list.splice(i,1)\n  }\n  /** \n   * Emit: send event, callbacks will be triggered\n   */\n  target.emit = function(){\n    var args = Array.apply([], arguments),\n    list = events[args.shift()] || [], i=0, j\n    for(;j=list[i++];) j.f.apply(j.c, args)\n  };\n}\n","//\n// Largely taken from https://github.com/jeremyruppel/underscore.inflection and Ember.js\n//\n\nvar plurals      = [];\nvar singulars    = [];\nvar uncountables = [];\n\n\n/**\n * `gsub` is a method that is just slightly different than our\n * standard `String#replace`. The main differences are that it\n * matches globally every time, and if no substitution is made\n * it returns `null`. It accepts a string for `word` and\n * `replacement`, and `rule` can be either a string or a regex.\n */\nexport function gsub(word, rule, replacement) {\n  var pattern = new RegExp(rule.source || rule, 'gi');\n\n  return pattern.test(word) ? word.replace(pattern, replacement) : null;\n}\n\n/**\n * `plural` creates a new pluralization rule for the inflector.\n * `rule` can be either a string or a regex.\n */\nexport function plural(rule, replacement) {\n  plurals.unshift([rule, replacement]);\n}\n\n/**\n * Pluralizes the string passed to it. It also can accept a\n * number as the second parameter. If a number is provided,\n * it will pluralize the word to match the number. Optionally,\n * you can pass `true` as a third parameter. If found, this\n * will include the count with the output.\n */\nexport function pluralize(word, count, includeNumber) {\n  var result;\n\n  if (count !== undefined) {\n    count = parseFloat(count);\n    result = (count === 1) ? singularize(word) : pluralize(word);\n    result = (includeNumber) ? [count, result].join(' ') : result;\n  }\n  else\n  {\n    if (_(uncountables).include(word)) {\n      return word;\n    }\n\n    result = word;\n\n    _(plurals).detect(function(rule) {\n      var res = gsub(word, rule[0], rule[1]);\n\n      return res ? (result = res) : false;\n    },\n    this);\n  }\n\n  return result;\n}\n\n/**\n * `singular` creates a new singularization rule for the\n * inflector. `rule` can be either a string or a regex.\n */\nexport function singular(rule, replacement) {\n  singulars.unshift([rule, replacement]);\n}\n\n/**\n * `singularize` returns the singular version of the plural\n * passed to it.\n */\nexport function singularize(word) {\n  if (_(uncountables).include(word)) {\n    return word;\n  }\n\n  var result = word;\n\n  _(singulars).detect(function(rule) {\n    var res = gsub(word, rule[0], rule[1]);\n\n    return res ? (result = res) : false;\n  },\n  this);\n\n  return result;\n}\n\n/**\n * `irregular` is a shortcut method to create both a\n * pluralization and singularization rule for the word at\n * the same time. You must supply both the singular form\n * and the plural form as explicit strings.\n */\nexport function irregular(s, p) {\n  plural('\\\\b' + singular + '\\\\b', p);\n  singular('\\\\b' + plural + '\\\\b', s);\n}\n\n/**\n * `uncountable` creates a new uncountable rule for `word`.\n * Uncountable words do not get pluralized or singularized.\n */\nexport function uncountable(word) {\n  uncountables.unshift(word);\n}\n\n/**\n * `ordinalize` adds an ordinal suffix to `number`.\n */\nexport function ordinalize(number) {\n  if (isNaN(number)) {\n    return number;\n  }\n\n  number = number.toString();\n  var lastDigit = number.slice(-1);\n  var lastTwoDigits = number.slice(-2);\n\n  if (lastTwoDigits === '11' || lastTwoDigits === '12' || lastTwoDigits === '13') {\n    return number + 'th';\n  }\n\n  switch (lastDigit) {\n    case '1':\n      return number + 'st';\n    case '2':\n      return number + 'nd';\n    case '3':\n      return number + 'rd';\n    default:\n      return number + 'th';\n  }\n}\n\n/**\n * `titleize` capitalizes the first letter of each word in\n * the string `words`. It preserves the existing whitespace.\n */\nexport function titleize(words) {\n  if (typeof words !== 'string') {\n    return words;\n  }\n\n  return words.replace(/\\S+/g, function(word) {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  });\n}\n\n/**\n * Resets the inflector's rules to their initial state,\n * clearing out any custom rules that have been added.\n */\nexport function resetInflections() {\n  plurals      = [];\n  singulars    = [];\n  uncountables = [];\n\n  plural(/$/,                         's');\n  plural(/s$/,                        's');\n  plural(/(ax|test)is$/,              '$1es');\n  plural(/(octop|vir)us$/,            '$1i');\n  plural(/(octop|vir)i$/,             '$1i');\n  plural(/(alias|status)$/,           '$1es');\n  plural(/(bu)s$/,                    '$1ses');\n  plural(/(buffal|tomat)o$/,          '$1oes');\n  plural(/([ti])um$/,                 '$1a');\n  plural(/([ti])a$/,                  '$1a');\n  plural(/sis$/,                      'ses');\n  plural(/(?:([^f])fe|([lr])?f)$/,     '$1$2ves');\n  plural(/(hive)$/,                   '$1s');\n  plural(/([^aeiouy]|qu)y$/,          '$1ies');\n  plural(/(x|ch|ss|sh)$/,             '$1es');\n  plural(/(matr|vert|ind)(?:ix|ex)$/, '$1ices');\n  plural(/([m|l])ouse$/,              '$1ice');\n  plural(/([m|l])ice$/,               '$1ice');\n  plural(/^(ox)$/,                    '$1en');\n  plural(/^(oxen)$/,                  '$1');\n  plural(/(quiz)$/,                   '$1zes');\n\n  singular(/s$/,                                                            '');\n  singular(/(n)ews$/,                                                       '$1ews');\n  singular(/([ti])a$/,                                                      '$1um');\n  singular(/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/, '$1$2sis');\n  singular(/(^analy)ses$/,                                                  '$1sis');\n  singular(/([^f])ves$/,                                                    '$1fe');\n  singular(/(hive)s$/,                                                      '$1');\n  singular(/(tive)s$/,                                                      '$1');\n  singular(/([lr])ves$/,                                                    '$1f');\n  singular(/([^aeiouy]|qu)ies$/,                                            '$1y');\n  singular(/(s)eries$/,                                                     '$1eries');\n  singular(/(m)ovies$/,                                                     '$1ovie');\n  singular(/(x|ch|ss|sh)es$/,                                               '$1');\n  singular(/([m|l])ice$/,                                                   '$1ouse');\n  singular(/(bus)es$/,                                                      '$1');\n  singular(/(o)es$/,                                                        '$1');\n  singular(/(shoe)s$/,                                                      '$1');\n  singular(/(cris|ax|test)es$/,                                             '$1is');\n  singular(/(octop|vir)i$/,                                                 '$1us');\n  singular(/(alias|status)es$/,                                             '$1');\n  singular(/^(ox)en/,                                                       '$1');\n  singular(/(vert|ind)ices$/,                                               '$1ex');\n  singular(/(matr)ices$/,                                                   '$1ix');\n  singular(/(quiz)zes$/,                                                    '$1');\n  singular(/(database)s$/,                                                  '$1');\n\n  irregular('person', 'people');\n  irregular('man',    'men');\n  irregular('child',  'children');\n  irregular('sex',    'sexes');\n  irregular('move',   'moves');\n  irregular('cow',    'kine');\n\n  uncountable('equipment');\n  uncountable('information');\n  uncountable('rice');\n  uncountable('money');\n  uncountable('species');\n  uncountable('series');\n  uncountable('fish');\n  uncountable('sheep');\n  uncountable('jeans');\n\n  return this;\n}\n\nresetInflections();\n\nvar STRING_DASHERIZE_REGEXP = (/[ _]/g);\nvar STRING_DASHERIZE_CACHE = {};\nvar STRING_DECAMELIZE_REGEXP = (/([a-z\\d])([A-Z])/g);\nvar STRING_CAMELIZE_REGEXP = (/(\\-|_|\\.|\\s)+(.)?/g);\nvar STRING_UNDERSCORE_REGEXP_1 = (/([a-z\\d])([A-Z]+)/g);\nvar STRING_UNDERSCORE_REGEXP_2 = (/\\-|\\s+/g);\n\nexport function decamelize(str) {\n  return str.replace(STRING_DECAMELIZE_REGEXP, '$1_$2').toLowerCase();\n}\n\nexport function dasherize(str) {\n  var cache = STRING_DASHERIZE_CACHE,\n      hit   = cache.hasOwnProperty(str),\n      ret;\n\n  if (hit) {\n    return cache[str];\n  } else {\n    ret = decamelize(str).replace(STRING_DASHERIZE_REGEXP,'-');\n    cache[str] = ret;\n  }\n\n  return ret;\n}\n\nexport function camelize(str) {\n  return str.replace(STRING_CAMELIZE_REGEXP, function(match, separator, chr) {\n    return chr ? chr.toUpperCase() : '';\n  }).replace(/^([A-Z])/, function(match, separator, chr) {\n    return match.toLowerCase();\n  });\n}\n\nexport function classify(str) {\n  var parts = str.split(\".\"),\n      out = [];\n\n  for (var i=0, l=parts.length; i<l; i++) {\n    var camelized = camelize(parts[i]);\n    out.push(camelized.charAt(0).toUpperCase() + camelized.substr(1));\n  }\n\n  return out.join(\".\");\n}\n\nexport function underscore(str) {\n  return str.replace(STRING_UNDERSCORE_REGEXP_1, '$1_$2').\n    replace(STRING_UNDERSCORE_REGEXP_2, '_').toLowerCase();\n}\n\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.substr(1);\n}\n","import isNone from './is_none';\n\nexport default function isEmpty(obj) {\n  return isNone(obj) || (obj.length === 0 && typeof obj !== 'function') || (typeof obj === 'object' && obj.size === 0);\n}\n","export default function isEqual(a, b) {\n  if (a && 'function'===typeof a.isEqual) return a.isEqual(b);\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  } \n  return a === b;\n}\n","export default function isNone(obj) {\n  return obj === null || obj === undefined;\n}\n","function _lazyCopy(obj, deep, seen, copies) {\n  var ret, loc, key;\n\n  // primitive data types are immutable, just return them.\n  if ('object' !== typeof obj || obj===null) return obj;\n  if (obj.lazyCopy && typeof obj.lazyCopy === 'function') return obj.lazyCopy(deep);\n  if (obj.copy && typeof obj.copy === 'function') return obj.copy(deep);\n\n  // avoid cyclical loops\n  if (deep && (loc=seen.indexOf(obj))>=0) return copies[loc];\n\n  if (obj instanceof Array) {\n    ret = obj.slice();\n    if (deep) {\n      loc = ret.length;\n      while(--loc>=0) ret[loc] = _lazyCopy(ret[loc], deep, seen, copies);\n    }\n  } else if (obj instanceof Date) {\n    ret = new Date(obj.getTime());\n  } else {\n    ret = {};\n    for(key in obj) {\n      if (!obj.hasOwnProperty(key)) continue;\n\n      // Prevents browsers that don't respect non-enumerability from\n      // copying internal Ember properties\n      if (key.substring(0,2) === '__') continue;\n\n      ret[key] = deep ? _lazyCopy(obj[key], deep, seen, copies) : obj[key];\n    }\n  }\n\n  if (deep) {\n    seen.push(obj);\n    copies.push(ret);\n  }\n\n  return ret;\n}\n\n/**\n  Similar to `copy` but checks for a `lazyCopy` method first.\n\n  @method lazyCopy\n  @param {Object} obj The object to clone\n  @param {Boolean} deep If true, a deep copy of the object is made\n  @return {Object} The cloned object\n*/\nexport default function lazyCopy(obj, deep) {\n  return _lazyCopy(obj, deep, deep ? [] : null, deep ? [] : null);\n}\n","import ModelSet from '../collections/model_set';\n\n/**\n  Given a collection of models, make sure all lazy\n  models/relations are replaced with their materialized counterparts\n  if they exist within the collection.\n*/\nexport default function materializeRelationships(models, idManager) {\n\n  if(!(models instanceof ModelSet)) {\n    models = new ModelSet(models);\n  }\n\n  models.forEach(function(model) {\n\n    if(model._parent) {\n      model._parent = models.getModel(model._parent);\n    }\n    \n    // TODO: does this overwrite non-lazy embedded children?\n    model.eachLoadedRelationship(function(name, relationship) {\n      if(relationship.kind === 'belongsTo') {\n        var child =model[name];\n        if(child) {\n          if(idManager) idManager.reifyClientId(child);\n          child = models.getModel(child) || child;\n          model[name] = child;\n        }\n      } else if(relationship.kind === 'hasMany') {\n        // TODO: merge could be per item\n        var children =model[name];\n        var lazyChildren = new ModelSet();\n        lazyChildren.addObjects(children);\n        children.clear();\n        lazyChildren.forEach(function(child) {\n          if(idManager) idManager.reifyClientId(child);\n          child = models.getModel(child) || child;\n          children.addObject(child);\n        });\n      }\n    }, this);\n\n  }, this);\n\n}\n","/**\n * Date.parse with progressive enhancement for ISO 8601 <https://github.com/csnover/js-iso8601>\n * © 2011 Colin Snover <http://zetafleet.com>\n * Released under MIT license.\n */\nvar origParse = Date.parse, numericKeys = [ 1, 4, 5, 6, 7, 10, 11 ];\nexport default function parseDate(date) {\n    var timestamp, struct, minutesOffset = 0;\n\n    // ES5 §15.9.4.2 states that the string should attempt to be parsed as a Date Time String Format string\n    // before falling back to any implementation-specific date parsing, so that’s what we do, even if native\n    // implementations could be faster\n    //              1 YYYY                2 MM       3 DD           4 HH    5 mm       6 ss        7 msec        8 Z 9 ±    10 tzHH    11 tzmm\n    if ((struct = /^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/.exec(date))) {\n        // avoid NaN timestamps caused by “undefined” values being passed to Date.UTC\n        for (var i = 0, k; (k = numericKeys[i]); ++i) {\n            struct[k] = +struct[k] || 0;\n        }\n\n        // allow undefined days and months\n        struct[2] = (+struct[2] || 1) - 1;\n        struct[3] = +struct[3] || 1;\n\n        if (struct[8] !== 'Z' && struct[9] !== undefined) {\n            minutesOffset = struct[10] * 60 + struct[11];\n\n            if (struct[9] === '+') {\n                minutesOffset = 0 - minutesOffset;\n            }\n        }\n\n        timestamp = Date.UTC(struct[1], struct[2], struct[3], struct[4], struct[5] + minutesOffset, struct[6], struct[7]);\n    }\n    else {\n        timestamp = origParse ? origParse(date) : NaN;\n    }\n\n    return timestamp;\n};"],"names":[],"mappings":"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","file":"coalesce.amd.js"}